/*
 * JSP generated by Resin-3.1.15 (built Mon, 13 Oct 2014 06:45:33 PDT)
 */

package _jsp._study;
import javax.servlet.*;
import javax.servlet.jsp.*;
import javax.servlet.http.*;
import java.text.DecimalFormat;
import java.util.*;
import java.io.*;
import dao.*;
import malgnsoft.db.*;
import malgnsoft.util.*;

public class _study_0course__jsp extends com.caucho.jsp.JavaPage
{
  private static final java.util.HashMap<String,java.lang.reflect.Method> _jsp_functionMap = new java.util.HashMap<String,java.lang.reflect.Method>();
  private boolean _caucho_isDead;
  
  public void
  _jspService(javax.servlet.http.HttpServletRequest request,
              javax.servlet.http.HttpServletResponse response)
    throws java.io.IOException, javax.servlet.ServletException
  {
    javax.servlet.http.HttpSession session = request.getSession(true);
    com.caucho.server.webapp.WebApp _jsp_application = _caucho_getApplication();
    javax.servlet.ServletContext application = _jsp_application;
    com.caucho.jsp.PageContextImpl pageContext = _jsp_application.getJspApplicationContext().allocatePageContext(this, _jsp_application, request, response, null, session, 8192, true, false);
    javax.servlet.jsp.PageContext _jsp_parentContext = pageContext;
    javax.servlet.jsp.JspWriter out = pageContext.getOut();
    final javax.el.ELContext _jsp_env = pageContext.getELContext();
    javax.servlet.ServletConfig config = getServletConfig();
    javax.servlet.Servlet page = this;
    response.setContentType("text/html; charset=utf-8");
    request.setCharacterEncoding("UTF-8");
    try {
      

//request.setCharacterEncoding("utf-8");

final String BUILDVERSION = "22.10.01";

String docRoot = Config.getDocRoot();
String jndi = Config.getJndi();

Malgn m = new Malgn(request, response, out);

Form f = new Form("form1");
try { f.setRequest(request); }
catch(Exception ex) { out.print("Overflow file size. - " + ex.getMessage()); return; }

SiteDao Site = new SiteDao(); //Site.clear();
DataSet siteinfo = Site.getSiteInfo(request.getServerName());
SiteConfigDao SiteConfig = new SiteConfigDao(siteinfo.i("id"));
if(1 != siteinfo.i("status") || "".equals(siteinfo.s("doc_root"))) {
	m.jsReplace("about:blank", "top");
	return;
}

//Hashtable<String, String> siteconfig = SiteConfig.getSiteConfig(siteinfo.s("id"));
boolean isDevServer = -1 < request.getServerName().indexOf("lms.malgn.co.kr");
String webUrl = request.getScheme() + "://" + request.getServerName();
int port = request.getServerPort();
if(port != 80 && port != 443) webUrl += ":" + port;
String dataDir = siteinfo.s("doc_root") + "/data";
String tplRoot = siteinfo.s("doc_root") + "/html";
if(isDevServer && siteinfo.i("skin_cd") == 5) tplRoot = siteinfo.s("doc_root") + "/html_v5";
f.dataDir = dataDir;
m.dataDir = dataDir;
//m.dataUrl = "https://cdn.malgnlms.com/cdndata/" + siteinfo.s("ftp_id");
m.dataUrl = Config.getDataUrl() + (!"/data".equals(Config.getDataUrl()) ? siteinfo.s("ftp_id") : "");


if(!"".equals(siteinfo.s("logo"))) siteinfo.put("logo_url", m.getUploadUrl(siteinfo.s("logo")));
else siteinfo.put("logo_url", "/common/images/default/malgn_logo.jpg");

//IP\ucc28\ub2e8
String userIp = request.getRemoteAddr();
if(!"".equals(siteinfo.s("allow_ip_user")) && !Site.checkIP(userIp, siteinfo.s("allow_ip_user"))) {
	m.redirect("/main/guide.jsp");
	return;
}

Page p = new Page(tplRoot);
p.setRequest(request);
p.setPageContext(pageContext);
p.setWriter(out);
p.setBaseRoot("/home/lms/public_html/html");
if(siteinfo.i("skin_cd") == 5) p.setBaseRoot("/home/lms/public_html/html_v5");

//\uc5b8\uc5b4
String sysLocale = "".equals(siteinfo.s("locale")) ? "default" : siteinfo.s("locale");
Message _message = new Message(sysLocale);
_message.reloadAll();
m.setMessage(_message);
//p.setMessage(_message);

int siteId = siteinfo.i("id");
int userId = 0;
String loginId = "";
String loginMethod = "";
String userName = "";
String userEmail = "";
String userKind = "";
int userDeptId = 0;
String userGroups = "";
int userGroupDisc = 0;
//String aloginYn = "";
String userSessionId = "";
boolean userB2BBlock = false;
String userB2BName = "";
String userB2BFile = "";
String sysToday = m.time("yyyyMMdd");
String sysNow = m.time("yyyyMMddHHmmss");
boolean isRemoteHost = false;
boolean isRespWeb = (5 <= siteinfo.i("skin_cd"));
boolean isGoMobile = !isRespWeb && m.isMobile();

SessionDao mSession = new SessionDao(request, response);

Auth auth = new Auth(request, response);
auth.loginURL = "/member/login.jsp";
auth.keyName = "MLMS14" + siteId + "7";
if(0 < siteinfo.i("session_hour")) auth.setValidTime(siteinfo.i("session_hour") * 3600);
if(auth.isValid()) {
	userId = auth.getInt("ID");
	loginId = auth.getString("LOGINID");
	loginMethod = auth.getString("LOGINMETHOD");
	userName = auth.getString("NAME");
	userEmail = auth.getString("EMAIL");
	userKind = auth.getString("KIND");
	userDeptId = auth.getInt("DEPT");
	userGroups = auth.getString("GROUPS");
	userGroupDisc = !"null".equals(auth.getString("GROUPS_DISC")) ? m.parseInt(auth.getString("GROUPS_DISC")) : 0;
	//aloginYn = auth.getString("ALOGIN_YN");
	userSessionId = auth.getString("SESSIONID");
	userB2BName = auth.getString("B2BNAME");
	userB2BFile = auth.getString("B2BFILE");
	//isRemoteHost = "Y".equals(auth.getString("TUTOR_YN")) && "Y".equals(SiteConfig.s("kt_remote_yn"));
	isRemoteHost = "Y".equals(auth.getString("TUTOR_YN")) && ("L".equals(SiteConfig.s("lanedu_type")) || "B".equals(SiteConfig.s("lanedu_type")));
	if(userGroups != null) {
		if(-1 < userGroups.indexOf(",")) for(String userGroupId : m.split(",", userGroups)) p.setVar("SYS_USERGROUP_" + userGroupId, true);
		else p.setVar("SYS_USERGROUP_" + userGroups, true);
	}
	
	//2\ucc28\uc778\uc99d\uccb4\ud06c
	/*if("direct".equals(loginMethod)
		&& "Y".equals(siteinfo.s("user_auth2_yn"))
		&& !"Y".equals(auth.getString("USER_AUTH2_YN"))
		&& !"".equals(auth.getString("USER_AUTH2_TYPE"))
		&& !"malgn".equals(loginId)
		&& -1 == request.getRequestURI().indexOf("/main/site_cache.jsp")
		&& -1 == request.getRequestURI().indexOf("/member/auth2.jsp")
		&& -1 == request.getRequestURI().indexOf("/member/otpkey_register.jsp")
		&& -1 == request.getRequestURI().indexOf("/member/logout.jsp")
		&& -1 == request.getRequestURI().indexOf("/member/alogin.jsp")
		&& -1 == request.getRequestURI().indexOf("/member/slogin.jsp")
		&& -1 == request.getRequestURI().indexOf("/member/login_facebook.jsp")
		&& -1 == request.getRequestURI().indexOf("/member/login_google.jsp")
		&& -1 == request.getRequestURI().indexOf("/member/login_kakao.jsp")
		&& -1 == request.getRequestURI().indexOf("/member/login_line.jsp")
		&& -1 == request.getRequestURI().indexOf("/member/login_naver.jsp")
	) {
		m.jsReplace("/member/auth2.jsp?returl=" + m.rs("returl", "/main/index.jsp"), "top");
		return;
	}*/

	mSession.put("id", userSessionId);
	mSession.save();

	p.setVar("login_block", true);
} else {
	p.setVar("login_block", false);

	if(siteinfo.b("close_yn")) {
		boolean isNeedLogin = true;
		String[] exceptPages = m.split("|", siteinfo.s("close_except"));

		if(-1 < request.getRequestURI().indexOf("/member/login.jsp")
			|| -1 < request.getRequestURI().indexOf("/member/find.jsp")
			|| -1 < request.getRequestURI().indexOf("/member/alogin.jsp")
			|| -1 < request.getRequestURI().indexOf("/member/slogin.jsp")
			|| -1 < request.getRequestURI().indexOf("/member/slogin_input.jsp")
			|| -1 < request.getRequestURI().indexOf("/member/sysop_slogin.jsp")
			|| -1 < request.getRequestURI().indexOf("/main/site_cache.jsp")
			|| -1 < request.getRequestURI().indexOf("/mobile/login.jsp")
			|| -1 < request.getRequestURI().indexOf("/mypage/certificate.jsp")
			|| -1 < request.getRequestURI().indexOf("/mypage/certificate_course.jsp")
			|| -1 < request.getRequestURI().indexOf("/kollus/check_api.jsp")
			|| -1 < request.getRequestURI().indexOf("/ktle/check_api.jsp")
			|| -1 < request.getRequestURI().indexOf("/common/")
			|| -1 < request.getRequestURI().indexOf("/api/auto_send.jsp")
		) {
			isNeedLogin = false;
		} else if(!"".equals(siteinfo.s("close_except"))) {
			for(int i = 0; i < exceptPages.length; i++) {
				if(-1 < request.getRequestURI().indexOf(exceptPages[i])) { isNeedLogin = false; continue; }
			}
		}

		if(isNeedLogin) {
			m.redirect(!isGoMobile ? auth.loginURL : "/mobile/login.jsp");
			return;
		}
	}
}

userB2BBlock = !"".equals(userB2BName) && null != userB2BName;
p.setVar("SYS_HTTPHOST", request.getServerName());
p.setVar("SYS_LOGINID", loginId);
p.setVar("SYS_USERNAME", userName);
p.setVar("SYS_USEREMAIL", userEmail);
p.setVar("SYS_USERKIND", userKind);
p.setVar("SYS_DEPTID", userDeptId);
p.setVar("SYS_GROUP_DISC", userGroupDisc);
p.setVar("SYS_B2BBLOCK", userB2BBlock);
p.setVar("SYS_B2BNAME", userB2BName);
p.setVar("SYS_B2BFILE", userB2BFile);
p.setVar("SYS_PAGE_URL", request.getRequestURL() + (!"".equals(m.qs()) ? "?" + m.qs() : ""));
p.setVar("SYS_TITLE", siteinfo.s("site_nm"));
p.setVar("webUrl", webUrl);
p.setVar("SITE_INFO", siteinfo);
//p.setVar("SITE_CONFIG", siteconfig);
p.setVar("CURR_DATE", m.time("yyyyMMdd"));
p.setVar("SYS_EK", m.encrypt(loginId + siteinfo.s("sso_key") + m.time("yyyyMMdd"), "SHA-256"));
p.setVar("IS_RESP_WEB", isRespWeb);
p.setVar("IS_MOBILE", m.isMobile());
p.setVar("IS_GO_MOBILE", isGoMobile);
p.setVar("IS_DEV_SERVER", isDevServer);
p.setVar("SYS_LOCALE", sysLocale);
p.setVar("SYS_TODAY", sysToday);
p.setVar("SYS_NOW", sysNow);
p.setVar("IS_REMOTE_HOST", isRemoteHost);
p.setVar("SYS_COMMON_CDN", !isDevServer ? "//cdn.malgnlms.com" : "");
p.setVar("script", siteinfo.s("header_script"));

for(int IndexSkin = 1; IndexSkin < 5; IndexSkin++) {
	p.setVar("SKIN_LT_" + IndexSkin, siteinfo.i("skin_cd") < IndexSkin);
	p.setVar("SKIN_LTE_" + IndexSkin, siteinfo.i("skin_cd") <= IndexSkin);
	p.setVar("SKIN_GT_" + IndexSkin, siteinfo.i("skin_cd") > IndexSkin);
	p.setVar("SKIN_GTE_" + IndexSkin, siteinfo.i("skin_cd") >= IndexSkin);
}

MenuDao Menu = new MenuDao(p, sysLocale);

UserSessionDao UserSession = new UserSessionDao();
UserSession.setSiteId(siteId);
if(userId != 0 && !"SYSLOGIN".equals(userSessionId) && !siteinfo.b("duplication_yn") && !UserSession.isValid(userSessionId, userId)) {
	if(request.getRequestURI().indexOf("/member/logout.jsp") == -1 && request.getRequestURI().indexOf("/mobile/logout.jsp") == -1) {
		m.jsAlert(_message.get("alert.common.logout_session"));
		if(request.getRequestURI().indexOf("/mobile/") != -1) m.jsReplace("/mobile/logout.jsp?mode=session");
		else m.jsReplace("/member/logout.jsp?mode=session");
		return;
	}
}


      

    String ch = m.rs("ch", "course");

    p.setVar("ch", ch);

//\uc815\ubcf4-\uc0ac\uc774\ud2b8\uc124\uc815
    DataSet siteconfig = SiteConfig.getArr(new String[] {"target_"});


      

    //\uac1d\uccb4
    CourseDao course = new CourseDao();
    CourseUserDao courseUser = new CourseUserDao();
   // CourseTargetDao courseTarget = new CourseTargetDao();
   // CourseLessonDao courseLesson = new CourseLessonDao();
   // CoursePackageDao coursePackage = new CoursePackageDao();
    LessonDao lesson = new LessonDao();
    LmCategoryDao category = new LmCategoryDao("course");

    //TutorDao tutor = new TutorDao();
   // CourseTutorDao courseTutor = new CourseTutorDao();
    //BookDao book = new BookDao();
   // CourseBookDao courseBook = new CourseBookDao();

//\ubcc0\uc218
    String today = m.time("yyyyMMdd");
    boolean regularBlock = false;
    boolean allRegularBlock = true;

//\ud3fc\uc785\ub825
    String style = "webzine";
    String ord = m.rs("ord");
    int categoryId = m.ri("cid", siteId * -1);
    int listNum = 10;

//\uce74\ud14c\uace0\ub9ac\uac00 \uc9c0\uc815\ub420 \uacbd\uc6b0 \uce74\ud14c\uace0\ub9ac \uc815\ubcf4 \uac00\uc838\uc634.
    String pTitle = "\uc804\uccb4\uacfc\uc815";
    DataSet cateInfo = category.find("id = " + categoryId + "");
    if(cateInfo.next()) {
        if(categoryId > 0) pTitle = cateInfo.s("category_nm");
        if(!"".equals(cateInfo.s("list_type"))) style = cateInfo.s("list_type");
        if("".equals(ord) && !"".equals(cateInfo.s("sort_type"))) ord = cateInfo.s("sort_type");
        if(cateInfo.i("list_num") > 0) listNum = cateInfo.i("list_num");
    }
    if(categoryId > 0) {
        p.setLoop("categories", category.getSubList(siteId, categoryId));
    } else if("st asc".equals(ord)) {
        ord = "as asc";
    }

    if(!"".equals(m.rs("s_style"))) style = m.rs("s_style");
    ord = m.getItem(ord.toLowerCase(), course.ordList);

//\ud3fc\uccb4\ud06c
    f.addElement("s_style", style, null);
    f.addElement("s_type", null, null);
    f.addElement("s_field", null, null);
    f.addElement("s_keyword", null, null);
    f.addElement("scid", null, null);
    f.addElement("ord", null, null);
    f.addElement("cid", null, null);

//\ubaa9\ub85d
    ListManager lm = new ListManager();
//lm.d(out);
    lm.setRequest(request);
    lm.setListNum(listNum);
//lm.setNaviNum(5);
    lm.setTable(
            course.table + " a "
                    + " LEFT JOIN " + lesson.table + " l ON a.sample_lesson_id = l.id "
                    + " LEFT JOIN " + category.table + " c ON a.category_id = c.id AND c.module = 'course' AND c.status = 1 "
    );
   /* lm.setFields(
            "a.* "
                    + " , ( CASE "
                    + " WHEN a.course_type = 'A' THEN 'Y' "
                    + " WHEN '" + today + "' BETWEEN a.request_sdate AND a.request_edate THEN 'Y' "
                    + " ELSE 'N' "
                    + " END ) is_request "
                    + " , ( CASE "
                    + " WHEN a.course_type = 'R' AND a.request_sdate > '" + today + "' THEN 'Y' ELSE 'N' "
                    + " END ) is_prev "
                    + " , ( CASE "
                    + " WHEN a.course_type = 'A' THEN 'Y' "
                    + " WHEN '" + today + "' BETWEEN a.study_sdate AND a.study_edate THEN 'Y' "
                    + " ELSE 'N' "
                    + " END ) is_study "
                    + ", (SELECT COUNT(*) FROM " + courseUser.table + " WHERE course_id = a.id AND status NOT IN (-1, -4)) user_cnt "
                    + ", (SELECT COUNT(*) FROM " + courseLesson.table + " WHERE course_id = a.id AND status = 1) lesson_cnt "
                    + ", (SELECT COUNT(*) FROM " + coursePackage.table + " WHERE package_id = a.id) course_cnt "
                    + ", c.category_nm, c.parent_id "
                    + ", l.start_url, l.lesson_type, l.content_width, l.content_height "
    );*/
    lm.addWhere("a.site_id = " + siteId + "");
    lm.addWhere("a.status = 1");
    lm.addWhere("a.display_yn = 'Y'");
    lm.addWhere("a.close_yn = 'N'");
//\ud2b9\uc815 \uce74\ud14c\uace0\ub9ac\uac00 \uc9c0\uc815\ub41c \uacbd\uc6b0 \ud558\uc704\uce74\ud14c\uace0\ub9ac \ud3ec\ud568 \uacfc\uc815 \uac80\uc0c9
    if(categoryId > 0) {
        String subIdx = category.getSubIdx(siteId, m.ri("scid") > 0 ? m.ri("scid") : categoryId);
        lm.addWhere("a.category_id IN (" + (!"".equals(subIdx) ? subIdx : "0") + ")");
    }
//\ud559\uc2b5\uadf8\ub8f9\uc774 \uc9c0\uc815\ub41c \uacbd\uc6b0 \uac80\uc0c9 \uc870\uac74 \ucd94\uac00
    lm.addWhere(
            "(a.target_yn = 'N'"
                    + (!"".equals(userGroups)
                    ? " OR EXISTS (SELECT 1 FROM " + courseTarget.table + " WHERE course_id = a.id AND group_id IN (" + userGroups + "))"
                    : "")
                    + ")"
    );
    lm.addSearch("a.onoff_type", f.get("s_type"));

    String sField = f.get("s_field", "");
    String allowFields = "a.course_nm,a.content1,a.content2";
    if(!m.inArray(sField, allowFields)) sField = "";
    if(!"".equals(sField)) lm.addSearch(sField, f.get("s_keyword"), "LIKE");
    else lm.addSearch(allowFields, f.get("s_keyword"), "LIKE");

//\uc815\ub82c\uae30\uc900\uc5d0 \ub530\ub77c
    lm.setOrderBy(!"".equals(ord) ? ord : "a.request_edate DESC, a.reg_date DESC, a.id DESC");

//\uac15\uc0ac/\ub3c4\uc11c
   /* Vector<String> idx = new Vector<String>();
    DataSet list = lm.getDataSet();
    while(list.next()) idx.add(list.s("id"));

//\uac15\uc0ac
    Hashtable<String, DataSet> tutorMap = new Hashtable<String, DataSet>();
    Hashtable<String, Integer> tutorCountMap = new Hashtable<String, Integer>();
    DataSet tutors = new DataSet();
    if(idx.size() > 0) {
        tutors = courseTutor.query(
                "SELECT a.course_id, t.* "
                        + " FROM " + courseTutor.table + " a "
                        + " LEFT JOIN " + tutor.table + " t ON a.user_id = t.user_id "
                        + " WHERE a.course_id IN (" + m.join(",", idx.toArray()) + ") "
                        + " ORDER BY a.course_id ASC, t.sort ASC, t.tutor_nm ASC "
        );
        while(tutors.next()) {
            tutors.put("tutor_file_url", m.getUploadUrl(tutors.s("tutor_file")));

            String key = tutors.s("course_id");
		*//*
		DataSet temp = tutorMap.containsKey(key) ? tutorMap.get(key) : new DataSet();
		temp.addRow(tutors.getRow());
		tutorMap.put(key, temp);
		*//*

            if(!tutorMap.containsKey(key)) {
                DataSet temp = new DataSet();
                temp.addRow(tutors.getRow());
                tutorMap.put(key, temp);
            }

            if(!tutorCountMap.containsKey(key)) {
                tutorCountMap.put(key, 0);
            } else {
                tutorCountMap.put(key, tutorCountMap.get(key) + 1);
            }

        }
    }*/
/*
//\ub3c4\uc11c
Hashtable<String, DataSet> bookMap = new Hashtable<String, DataSet>();
DataSet books = new DataSet();
if(idx.size() > 0) {
	books = courseBook.query(
		"SELECT a.course_id, b.* "
		+ " FROM " + courseBook.table + " a "
		+ " LEFT JOIN " + book.table + " b ON a.book_id = b.id "
		+ " WHERE a.course_id IN (" + m.join(",", idx.toArray()) + ") "
		+ " ORDER BY a.course_id ASC, a.book_id ASC "
	);
	while(books.next()) {
		String key = books.s("course_id");
		DataSet temp = bookMap.containsKey(key) ? bookMap.get(key) : new DataSet();
		temp.addRow(books.getRow());
		bookMap.put(key, temp);
	}
}
*/
//\ud3ec\ub9f7\ud305
    list.first();
    while(list.next()) {

        list.put("request_date", "-");
        if("R".equals(list.s("course_type"))) {
            regularBlock = true;
            list.put("is_regular", true);
            list.put("request_date", m.time(_message.get("format.date.dot"), list.s("request_sdate")) + " - " + m.time(_message.get("format.date.dot"), list.s("request_edate")));
            list.put("study_date", m.time(_message.get("format.date.dot"), list.s("study_sdate")) + " - " + m.time(_message.get("format.date.dot"), list.s("study_edate")));
            list.put("ready_block", !"".equals(list.s("request_sdate")) ? 0 > m.diffDate("D", list.s("request_sdate"), today) : false);
        } else if("A".equals(list.s("course_type"))) {
            allRegularBlock = false;
            list.put("is_regular", false);
            list.put("request_date", _message.get("list.course.types.A"));
            list.put("study_date", _message.get("list.course.types.A"));
            list.put("ready_block", false);
        }

        //list.put("course_nm_conv", m.cutString(list.s("course_nm"), 48));
        list.put("course_nm_conv", list.s("course_nm"));
        list.put("lesson_time", new DecimalFormat("#.##").format(list.d("lesson_time")));
        list.put("lesson_time_conv", m.nf((int)list.d("lesson_time")));
        list.put("lesson_time_hour", (int)Math.floor(list.d("lesson_time")));
        list.put("lesson_time_min", (int)Math.round((list.d("lesson_time") - Math.floor(list.d("lesson_time"))) * 60));

        list.put("subtitle_conv", m.nl2br(list.s("subtitle")));
        list.put("content_conv", m.cutString(m.stripTags(list.s("content1")), 120));
        //list.put("content_conv", !"".equals(list.s("subtitle_conv")) ? list.s("subtitle_conv") : m.cutString(m.stripTags(list.s("content1")), 120));
        list.put("content_html", m.cutString(list.s("content1"), 200));
        list.put("content_nl2br", m.cutString(m.nl2br(list.s("content1")), 120));

        list.put("content2_conv", m.cutString(m.stripTags(list.s("content2")), 120));
        list.put("content2_html", m.cutString(list.s("content2"), 200));
        list.put("content2_nl2br", m.cutString(m.nl2br(list.s("content2")), 120));
        if(!"".equals(list.s("course_file"))) {
            list.put("course_file_url", m.getUploadUrl(list.s("course_file")));
        } else {
            list.put("course_file_url", "/html/images/common/noimage_course.gif");
        }

        list.put("request_block",
                (
                        ("Y".equals(list.s("is_request")) && "N".equals(list.s("limit_people_yn")))
                                || ("Y".equals(list.s("is_request")) && "Y".equals(list.s("limit_people_yn")) && list.i("limit_people") > list.i("user_cnt"))
                ) && !list.b("close_yn") && list.b("sale_yn")
        );

        list.put("price_conv", list.i("price") > 0 ? siteinfo.s("currency_prefix") + m.nf(list.i("price")) + siteinfo.s("currency_suffix") : _message.get("payment.unit.free"));
        list.put("price_conv2", m.nf(list.i("price")));

        list.put("list_price_conv", m.nf(list.i("list_price")));
        list.put("list_price_block", list.i("list_price") > 0);

        int discGroupPrice = list.i("price") - list.i("price") * userGroupDisc / 100; //CouponUserDao.getDiscountPrice() \uc640 \ub9de\ucda4
        list.put("disc_group_price_block", list.b("disc_group_yn") && 0 < userGroupDisc);
        list.put("disc_group_price", list.b("disc_group_price_block") ? discGroupPrice : list.i("price"));
        list.put("disc_group_price_conv", discGroupPrice > 0 ? siteinfo.s("currency_prefix") + m.nf(list.i("disc_group_price")) + siteinfo.s("currency_suffix") : _message.get("payment.unit.free"));

        list.put("content_width_conv", list.i("content_width") + 20);
        list.put("content_height_conv", list.i("content_height") + 23);

        list.put("is_online", "N".equals(list.s("onoff_type")));
        list.put("is_offline", "F".equals(list.s("onoff_type")));
        list.put("is_blend", "B".equals(list.s("onoff_type")));
        list.put("is_package", "P".equals(list.s("onoff_type")));
        list.put("onoff_type_conv", m.getValue(list.s("onoff_type"), course.onoffPackageTypesMsg));

        list.put("free_block", 0 == list.i("price"));

        String key = list.s("id");
        list.put(".tutors", tutorMap.containsKey(key) ? tutorMap.get(key) : new DataSet());
        list.put("tutor_counts", tutorCountMap.containsKey(key) ? tutorCountMap.get(key).intValue() : 0);
        //list.put(".books", bookMap.containsKey(key) ? bookMap.get(key) : new DataSet());

        //\ub3c4\uc11c
     /*   list.put("book_price", 0);
        DataSet books = courseBook.query(
                "SELECT a.*, b.* "
                        + " FROM " + courseBook.table + " a "
                        + " INNER JOIN " + book.table + " b ON a.book_id = b.id "
                        + " WHERE a.course_id = " + list.i("id") + ""
        );
        while(books.next()) {
            books.put("book_img_url", m.getUploadUrl(books.s("book_img")));
            books.put("book_nm_conv", m.cutString(books.s("book_nm"), 20));
            books.put("book_price_conv", m.nf(books.i("book_price")));
            list.put("book_price", list.i("book_price") + books.i("book_price"));
        }*/

      /*  //\ub3c4\uc11c \uad6c\ub9e4 \uc5ec\ubd80
        list.put("book_buy_block", list.i("book_price") > 0 && list.i("price") > 0);
        list.put("book_price_conv", m.nf(list.i("book_price")));
        list.put(".books", books);
        list.put("book_cnt", books.size());
*/
        //\uc218\uac15\uc0dd\uc5ec\ubd80
        list.put("course_user_id", courseUser.getCourseUserId(list.i("id"), userId, siteId));
        list.put("course_user_block", 0 < list.i("course_user_id"));
    }

//\ucd9c\ub825
    p.setLayout(ch);
    p.setBody("course.course_list");
    p.setVar("p_title", pTitle);
    p.setVar("query", m.qs());
    p.setVar("list_query", m.qs("id"));
    p.setVar("form_script", f.getScript());

    p.setLoop("list", list);
    p.setVar("pagebar", lm.getPaging());
    p.setVar("list_type", "list".equals(style));
    p.setVar("webzine_type", "webzine".equals(style));
    p.setVar("gallery_type", "gallery".equals(style));

    p.setVar("category", cateInfo);

    p.setVar("returl", m.urlencode(request.getRequestURI() + "?" + m.qs()));
    p.setVar("style", style);
    p.setVar("regular_block", regularBlock);
    p.setVar("all_regular_block", allRegularBlock);
    p.display();


    } catch (java.lang.Throwable _jsp_e) {
      pageContext.handlePageException(_jsp_e);
    } finally {
      _jsp_application.getJspApplicationContext().freePageContext(pageContext);
    }
  }

  private java.util.ArrayList _caucho_depends = new java.util.ArrayList();

  public java.util.ArrayList _caucho_getDependList()
  {
    return _caucho_depends;
  }

  public void _caucho_addDepend(com.caucho.vfs.PersistentDependency depend)
  {
    super._caucho_addDepend(depend);
    com.caucho.jsp.JavaPage.addDepend(_caucho_depends, depend);
  }

  public boolean _caucho_isModified()
  {
    if (_caucho_isDead)
      return true;
    if (com.caucho.server.util.CauchoSystem.getVersionId() != 6749855747778707107L)
      return true;
    for (int i = _caucho_depends.size() - 1; i >= 0; i--) {
      com.caucho.vfs.Dependency depend;
      depend = (com.caucho.vfs.Dependency) _caucho_depends.get(i);
      if (depend.isModified())
        return true;
    }
    return false;
  }

  public long _caucho_lastModified()
  {
    return 0;
  }

  public java.util.HashMap<String,java.lang.reflect.Method> _caucho_getFunctionMap()
  {
    return _jsp_functionMap;
  }

  public void init(ServletConfig config)
    throws ServletException
  {
    com.caucho.server.webapp.WebApp webApp
      = (com.caucho.server.webapp.WebApp) config.getServletContext();
    super.init(config);
    com.caucho.jsp.TaglibManager manager = webApp.getJspApplicationContext().getTaglibManager();
    com.caucho.jsp.PageContextImpl pageContext = new com.caucho.jsp.PageContextImpl(webApp, this);
  }

  public void destroy()
  {
      _caucho_isDead = true;
      super.destroy();
  }

  public void init(com.caucho.vfs.Path appDir)
    throws javax.servlet.ServletException
  {
    com.caucho.vfs.Path resinHome = com.caucho.server.util.CauchoSystem.getResinHome();
    com.caucho.vfs.MergePath mergePath = new com.caucho.vfs.MergePath();
    mergePath.addMergePath(appDir);
    mergePath.addMergePath(resinHome);
    com.caucho.loader.DynamicClassLoader loader;
    loader = (com.caucho.loader.DynamicClassLoader) getClass().getClassLoader();
    String resourcePath = loader.getResourcePathSpecificFirst();
    mergePath.addClassPath(resourcePath);
    com.caucho.vfs.Depend depend;
    depend = new com.caucho.vfs.Depend(appDir.lookup("study/study_course.jsp"), -3221830178089014363L, false);
    com.caucho.jsp.JavaPage.addDepend(_caucho_depends, depend);
    depend = new com.caucho.vfs.Depend(appDir.lookup("study/init.jsp"), 2587968270239031932L, false);
    com.caucho.jsp.JavaPage.addDepend(_caucho_depends, depend);
    depend = new com.caucho.vfs.Depend(appDir.lookup("init.jsp"), 6326164006358099841L, false);
    com.caucho.jsp.JavaPage.addDepend(_caucho_depends, depend);
  }
}
