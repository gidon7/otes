/*
 * JSP generated by Resin-3.1.15 (built Mon, 13 Oct 2014 06:45:33 PDT)
 */

package _jsp._order;
import javax.servlet.*;
import javax.servlet.jsp.*;
import javax.servlet.http.*;
import java.util.*;
import java.io.*;
import dao.*;
import malgnsoft.db.*;
import malgnsoft.util.*;

public class _cart_0list__jsp extends com.caucho.jsp.JavaPage
{
  private static final java.util.HashMap<String,java.lang.reflect.Method> _jsp_functionMap = new java.util.HashMap<String,java.lang.reflect.Method>();
  private boolean _caucho_isDead;
  
  public void
  _jspService(javax.servlet.http.HttpServletRequest request,
              javax.servlet.http.HttpServletResponse response)
    throws java.io.IOException, javax.servlet.ServletException
  {
    javax.servlet.http.HttpSession session = request.getSession(true);
    com.caucho.server.webapp.WebApp _jsp_application = _caucho_getApplication();
    javax.servlet.ServletContext application = _jsp_application;
    com.caucho.jsp.PageContextImpl pageContext = _jsp_application.getJspApplicationContext().allocatePageContext(this, _jsp_application, request, response, null, session, 8192, true, false);
    javax.servlet.jsp.PageContext _jsp_parentContext = pageContext;
    javax.servlet.jsp.JspWriter out = pageContext.getOut();
    final javax.el.ELContext _jsp_env = pageContext.getELContext();
    javax.servlet.ServletConfig config = getServletConfig();
    javax.servlet.Servlet page = this;
    response.setContentType("text/html; charset=utf-8");
    request.setCharacterEncoding("UTF-8");
    try {
      

//request.setCharacterEncoding("utf-8");

String docRoot = Config.getDocRoot();
String jndi = Config.getJndi();

Malgn m = new Malgn(request, response, out);

Form f = new Form("form1");
try { f.setRequest(request); }
catch(Exception ex) { out.print("Overflow file size. - " + ex.getMessage()); return; }

SiteDao Site = new SiteDao(); //Site.clear();
DataSet siteinfo = Site.getSiteInfo(request.getServerName());
SiteConfigDao SiteConfig = new SiteConfigDao(siteinfo.i("id"));
if(1 != siteinfo.i("status") || "".equals(siteinfo.s("doc_root"))) {
	m.jsReplace("about:blank", "top"); 
	return;
}
//Hashtable<String, String> siteconfig = SiteConfig.getSiteConfig(siteinfo.s("id"));

String webUrl = request.getScheme() + "://" + request.getServerName();
int port = request.getServerPort();
if(port != 80) webUrl += ":" + port;
String dataDir = siteinfo.s("doc_root") + "/data";
String tplRoot = siteinfo.s("doc_root") + "/html";
f.dataDir = dataDir;
m.dataDir = dataDir;
//m.dataUrl = "https://cdn.malgnlms.com/cdndata/" + siteinfo.s("ftp_id");
m.dataUrl = Config.getDataUrl() + (!"/data".equals(Config.getDataUrl()) ? siteinfo.s("ftp_id") : "");

boolean isDevServer = -1 < request.getServerName().indexOf("lms.malgn.co.kr");
if(!"".equals(siteinfo.s("logo"))) siteinfo.put("logo_url", m.getUploadUrl(siteinfo.s("logo")));
else siteinfo.put("logo_url", "/common/images/default/malgn_logo.jpg");

//IP\ucc28\ub2e8
String userIp = request.getRemoteAddr();
if(!"".equals(siteinfo.s("allow_ip_user")) && !Site.checkIP(userIp, siteinfo.s("allow_ip_user"))) {
	m.redirect("/main/guide.jsp");
	return;
}

Page p = new Page(tplRoot);
p.setRequest(request);
p.setPageContext(pageContext);
p.setWriter(out);
p.setBaseRoot("/home/lms/public_html/html");

//\uc5b8\uc5b4
String sysLocale = "".equals(siteinfo.s("locale")) ? "default" : siteinfo.s("locale");
Message _message = new Message(sysLocale);
_message.reloadAll();
m.setMessage(_message);
//p.setMessage(_message);

int siteId = siteinfo.i("id");
int userId = 0;
String loginId = "";
String loginMethod = "";
String userName = "";
String userEmail = "";
String userKind = "";
int userDeptId = 0;
String userGroups = "";
int userGroupDisc = 0;
//String aloginYn = "";
String userSessionId = "";
boolean userB2BBlock = false;
String userB2BName = "";
String userB2BFile = "";
String sysToday = m.time("yyyyMMdd");
String sysNow = m.time("yyyyMMddHHmmss");

//SessionDao mSession = new SessionDao("user");
SessionDao mSession = new SessionDao(request, response);
//mSession.setId(session.getId());
mSession.setSiteId(siteId);

Auth auth = new Auth(request, response);
auth.loginURL = "/member/login.jsp";
auth.keyName = "MLMS14" + siteId + "7";
if(0 < siteinfo.i("session_hour")) auth.setValidTime(siteinfo.i("session_hour") * 3600);
if(auth.isValid()) {
	userId = auth.getInt("ID");
	loginId = auth.getString("LOGINID");
	loginMethod = auth.getString("LOGINMETHOD");
	userName = auth.getString("NAME");
	userEmail = auth.getString("EMAIL");
	userKind = auth.getString("KIND");
	userDeptId = auth.getInt("DEPT");
	userGroups = auth.getString("GROUPS");
	userGroupDisc = !"null".equals(auth.getString("GROUPS_DISC")) ? m.parseInt(auth.getString("GROUPS_DISC")) : 0;
	//aloginYn = auth.getString("ALOGIN_YN");
	userSessionId = auth.getString("SESSIONID");
	userB2BName = auth.getString("B2BNAME");
	userB2BFile = auth.getString("B2BFILE");
	if("SYSLOGIN".equals(userSessionId)) siteinfo.put("duplication_yn", "Y");

	mSession.setId(userSessionId);
	mSession.setUserId(userId);

	if(userGroups != null) {
		if(-1 < userGroups.indexOf(",")) for(String userGroupId : m.split(",", userGroups)) p.setVar("SYS_USERGROUP_" + userGroupId, true);
		else p.setVar("SYS_USERGROUP_" + userGroups, true);
	}

	p.setVar("login_block", true);
} else {
	p.setVar("login_block", false);

	if(siteinfo.b("close_yn")) {		
		boolean isNeedLogin = true;
		String[] exceptPages = m.split("|", siteinfo.s("close_except"));
		
		if(-1 < request.getRequestURI().indexOf("/member/login.jsp")
			|| -1 < request.getRequestURI().indexOf("/member/find.jsp")
			|| -1 < request.getRequestURI().indexOf("/member/alogin.jsp")
			|| -1 < request.getRequestURI().indexOf("/member/slogin.jsp")
			|| -1 < request.getRequestURI().indexOf("/member/slogin_input.jsp")
			|| -1 < request.getRequestURI().indexOf("/member/sysop_slogin.jsp")
			|| -1 < request.getRequestURI().indexOf("/main/site_cache.jsp")
			|| -1 < request.getRequestURI().indexOf("/mobile/login.jsp")
			|| -1 < request.getRequestURI().indexOf("/mypage/certificate.jsp")
			|| -1 < request.getRequestURI().indexOf("/mypage/certificate_course.jsp")
			|| -1 < request.getRequestURI().indexOf("/kollus/check_api.jsp")
			|| -1 < request.getRequestURI().indexOf("/common/")
		) {
			isNeedLogin = false;
		} else if(!"".equals(siteinfo.s("close_except"))) {
			for(int i = 0; i < exceptPages.length; i++) {
				if(-1 < request.getRequestURI().indexOf(exceptPages[i])) { isNeedLogin = false; continue; }
			}
		}

		if(isNeedLogin) {
			m.redirect(!m.isMobile() ? auth.loginURL : "/mobile/login.jsp");
			return;
		}
	}
}

userB2BBlock = !"".equals(userB2BName) && null != userB2BName;
p.setVar("SYS_HTTPHOST", request.getServerName());
p.setVar("SYS_LOGINID", loginId);
p.setVar("SYS_USERNAME", userName);
p.setVar("SYS_USEREMAIL", userEmail);
p.setVar("SYS_USERKIND", userKind);
p.setVar("SYS_DEPTID", userDeptId);
p.setVar("SYS_GROUP_DISC", userGroupDisc);
p.setVar("SYS_B2BBLOCK", userB2BBlock);
p.setVar("SYS_B2BNAME", userB2BName);
p.setVar("SYS_B2BFILE", userB2BFile);
p.setVar("SYS_PAGE_URL", request.getRequestURL() + (!"".equals(m.qs()) ? "?" + m.qs() : ""));
p.setVar("SYS_TITLE", siteinfo.s("site_nm"));
p.setVar("webUrl", webUrl);
p.setVar("SITE_INFO", siteinfo);
//p.setVar("SITE_CONFIG", siteconfig);
p.setVar("CURR_DATE", m.time("yyyyMMdd"));
p.setVar("SYS_EK", m.encrypt(loginId + siteinfo.s("sso_key") + m.time("yyyyMMdd"), "SHA-256"));
p.setVar("IS_MOBILE", m.isMobile());
p.setVar("IS_DEV_SERVER", isDevServer);
p.setVar("SYS_LOCALE", sysLocale);
p.setVar("SYS_TODAY", sysToday);
p.setVar("SYS_NOW", sysNow);
p.setVar("SYS_COMMON_CDN", !isDevServer ? "//cdn.malgnlms.com" : "");

MenuDao Menu = new MenuDao(p, sysLocale);

UserSessionDao UserSession = new UserSessionDao();
UserSession.setSiteId(siteId);
if(userId != 0 && !siteinfo.b("duplication_yn") && !UserSession.isValid(userSessionId, userId)) {
	if(request.getRequestURI().indexOf("/member/logout.jsp") == -1 && request.getRequestURI().indexOf("/mobile/logout.jsp") == -1) {
		m.jsAlert(_message.get("alert.common.logout_session"));
		if(request.getRequestURI().indexOf("/mobile/") != -1) m.jsReplace("/mobile/logout.jsp?mode=session");
		else m.jsReplace("/member/logout.jsp?mode=session");
		return;
	}
}


      

//\ub85c\uadf8\uc778
if(0 == userId) { auth.loginForm(); return; }

//\uc815\ubcf4-\ud68c\uc6d0
UserDao user = new UserDao();
DataSet uinfo = user.find("id = " + userId + " AND status = 1");
if(!uinfo.next()) { m.jsError(_message.get("alert.member.nodata")); return; }
uinfo.put("mobile_conv", !"".equals(uinfo.s("mobile")) ? SimpleAES.decrypt(uinfo.s("mobile")) : "");

String ch = m.rs("ch", "mypage");


      

//\uac1d\uccb4
CourseDao course = new CourseDao();
BookDao book = new BookDao();
FreepassDao freepass = new FreepassDao();
OrderDao order = new OrderDao();
OrderItemDao orderItem = new OrderItemDao();
GroupDao group = new GroupDao();

//\uac31\uc2e0-\uacb0\uc81c\ub300\uae30\uc5d0\uc11c \uce74\ud2b8\ub85c \uc62e\uae40
//orderItem.execute("UPDATE " + orderItem.table + " SET status = 10 WHERE order_id = -99 AND status = 20 AND user_id = " + userId);
orderItem.execute("UPDATE " + orderItem.table + " SET order_id = -99, status = 10 WHERE status = 20 AND user_id = " + userId);

//\ubcc0\uc218
String today = m.time("yyyyMMdd");
boolean isReload = false;
boolean isMobile = m.isMobile();
String moveDir = "/" + (!isMobile ? "order" : "mobile") + "/";
String tmpGroups = group.getUserGroup(uinfo);
int groupDisc = group.getMaxDiscRatio();

//\ubaa9\ub85d
//orderItem.d(out);
DataSet list = orderItem.query(
	"SELECT a.*"
	+ ", c.id course_id, c.course_type, c.onoff_type, c.request_sdate, c.request_edate, c.credit, c.close_yn, c.sale_yn, c.disc_group_yn course_disc_group_yn "
	+ ", c.price c_price, b.book_price, b.delivery_type, b.delivery_price, b.disc_group_yn book_disc_group_yn "
	+ ", f.price freepass_price, f.disc_group_yn freepass_disc_group_yn "
	+ " FROM " + orderItem.table + " a "
	+ " LEFT JOIN " + course.table + " c ON a.product_type = 'course' AND a.product_id = c.id AND c.status = 1 "
	+ " LEFT JOIN " + book.table + " b ON a.product_type = 'book' AND a.product_id = b.id AND b.status = 1 "
	+ " LEFT JOIN " + freepass.table + " f ON a.product_type = 'freepass' AND a.product_id = f.id AND f.status = 1 "
	+ " WHERE a.user_id = " + userId + " AND a.status = 10 "
	+ " ORDER BY a.course_id ASC, a.product_type DESC, a.id ASC "
);
while(list.next()) {
	list.put("course_block", false);
	list.put("book_block", false);
	list.put("freepass_block", false);
	list.put(list.s("product_type") + "_block", true);
	list.put("use_block", true);
	list.put("unit_price_conv", m.nf(list.i("unit_price")));
	list.put("price_conv", m.nf(list.i("price")));
	list.put("delivery_price_conv", m.nf(list.i("delivery_price")));
	list.put("delivery_block", list.i("delivery_price") > 0);
	list.put("product_type_conv", m.getItem(list.s("product_type"), orderItem.ptypes));
	list.put("credit", m.nf(list.i("credit")));

	orderItem.cancelDiscount(list.i("id"), list.i("coupon_user_id"));

	if("course".equals(list.s("product_type"))) {
		list.put("use_block", true);

		list.put("request_date", "");

		//\uc0ad\uc81c-\uadf8\ub8f9\ud560\uc778\uae08\uc561\uac80\uc0ac
		if(list.b("course_disc_group_yn") && 0 < groupDisc) {
			int discGroupPrice = list.i("price") * groupDisc / 100; //CouponUserDao.getDiscountPrice() \uc640 \ub9de\ucda4
			if(discGroupPrice != list.i("disc_group_price")) {
				orderItem.deleteCartItem(list.i("id"), list.i("coupon_user_id"));
				isReload = true;
			}
		} else if(0 < list.i("disc_group_price")) {
			orderItem.deleteCartItem(list.i("id"), list.i("coupon_user_id"));
			isReload = true;
		}

		if("R".equals(list.s("course_type"))) {
			list.put("request_date", m.time(_message.get("format.date.dot"), list.s("request_sdate")) + " - " + m.time(_message.get("format.date.dot"), list.s("request_edate")));

			//\uc0ad\uc81c-\uae30\uac04\uc774 \uc9c0\ub09c \uacbd\uc6b0/\uae08\uc561\ud2c0\ub9bc
			if(	0 > m.diffDate("D", list.s("request_sdate"), today)
				|| 0 > m.diffDate("D", today, list.s("request_edate"))
				|| list.b("close_yn")
				|| list.i("price") != list.i("c_price")
			) {
				orderItem.deleteCartItem(list.i("id"), list.i("coupon_user_id"));
				isReload = true;
			}

		} else if("A".equals(list.s("course_type"))) {
			//list.put("request_date", "\uc0c1\uc2dc");

			//\uc0ad\uc81c-\uae08\uc561\ud2c0\ub9bc
			if(list.i("price") != list.i("c_price") || list.b("close_yn")) {
				orderItem.deleteCartItem(list.i("id"), list.i("coupon_user_id"));
				isReload = true;
			}
		}

		//\uc0ad\uc81c-\ud310\ub9e4\ub9c8\uac10
		if(!list.b("sale_yn")) {
			orderItem.deleteCartItem(list.i("id"), list.i("coupon_user_id"));
			isReload = true;
		}

	} else if("book".equals(list.s("product_type"))) {
		//list.put("use_block", list.i("pay_price") == list.i("book_price"));
		list.put("use_block", true);

		//\uc0ad\uc81c-\uadf8\ub8f9\ud560\uc778\uae08\uc561\uac80\uc0ac
		if(list.b("book_disc_group_yn") && 0 < groupDisc) {
			int discGroupPrice = list.i("price") * groupDisc / 100; //CouponUserDao.getDiscountPrice() \uc640 \ub9de\ucda4
			if(discGroupPrice != list.i("disc_group_price")) {
				orderItem.deleteCartItem(list.i("id"), list.i("coupon_user_id"));
				isReload = true;
			}
		} else if(0 < list.i("disc_group_price")) {
			orderItem.deleteCartItem(list.i("id"), list.i("coupon_user_id"));
			isReload = true;
		}

		//\uc0ad\uc81c-\uae08\uc561\ud2c0\ub9bc
		if(list.i("unit_price") != list.i("book_price")) {
			orderItem.deleteCartItem(list.i("id"), list.i("coupon_user_id"));
			isReload = true;
		}
	} else if("freepass".equals(list.s("product_type"))) {
		//list.put("use_block", list.i("pay_price") == list.i("freepass_price"));
		list.put("use_block", true);

		//\uc0ad\uc81c-\uadf8\ub8f9\ud560\uc778\uae08\uc561\uac80\uc0ac
		if(list.b("freepass_disc_group_yn") && 0 < groupDisc) {
			int discGroupPrice = list.i("price") * groupDisc / 100; //CouponUserDao.getDiscountPrice() \uc640 \ub9de\ucda4
			if(discGroupPrice != list.i("disc_group_price")) {
				orderItem.deleteCartItem(list.i("id"), list.i("coupon_user_id"));
				isReload = true;
			}
		} else if(0 < list.i("disc_group_price")) {
			orderItem.deleteCartItem(list.i("id"), list.i("coupon_user_id"));
			isReload = true;
		}

		//\uc0ad\uc81c-\uae08\uc561\ud2c0\ub9bc
		if(list.i("unit_price") != list.i("freepass_price")) {
			orderItem.deleteCartItem(list.i("id"), list.i("coupon_user_id"));
			isReload = true;
		}
	}

}

//\ub9ac\ub85c\ub4dc
if(isReload) {
	m.jsAlert(_message.get("alert.order_item.canceled_by_change"));
	m.jsReplace("cart_list.jsp");
	return;
}


//\ud3fc\uc785\ub825
f.addElement("idx", null, "hname:'\ud56d\ubaa9', required:'Y'");

//\uce74\ud2b8\uc218\uc815
if(m.isPost()) {

	if("qty".equals(f.get("mode"))) {
		//\uae30\ubcf8\ud0a4
		int iid = f.getInt("order_item_id");
		if(0 == iid) { m.jsAlert(_message.get("alert.common.required_key")); return; }

		//\uc815\ubcf4
		DataSet info = orderItem.query(
			" SELECT a.*, b.book_price "
			+ " FROM " + orderItem.table + " a "
			+ " LEFT JOIN " + book.table + " b ON a.product_type = 'book' AND a.product_id = b.id AND b.status = 1 "
			//+ " WHERE a.id = " + iid + " AND a.user_id = " + userId + " AND a.order_id = -99 AND a.status = 10 "
			+ " WHERE a.id = " + iid + " AND a.user_id = " + userId + " AND a.status = 10 "
		);
		if(!info.next()) { m.jsAlert(_message.get("alert.common.nodata")); return; }

		//\uc218\uc815
		int qty = f.getInt("quantity");
		int unitPrice = info.i("book_price");
		if(qty < 1) qty = 1;
		if(qty > 1000) qty = 1000;
		orderItem.item("quantity", qty);
		orderItem.item("price", qty * unitPrice);
		orderItem.item("pay_price", qty * unitPrice);

		//\uadf8\ub8f9\ud560\uc778
		if(0 < info.i("disc_group_price") && 0 < groupDisc) {
			int discGroupPrice = qty * unitPrice * groupDisc / 100; //CouponUserDao.getDiscountPrice() \uc640 \ub9de\ucda4
			orderItem.item("disc_group_price", discGroupPrice);
			orderItem.item("pay_price", qty * (unitPrice - discGroupPrice));
		} else {
			orderItem.item("disc_group_price", 0);
			orderItem.item("pay_price", qty * unitPrice);
		}

		if(!orderItem.update("id = " + iid)) { m.jsAlert(_message.get("alert.common.error_modify")); return; }

		//\uc774\ub3d9
		m.jsReplace("cart_list.jsp?" + m.qs(), "parent");
		return;

	} else if(f.validate()) {
		String[] idx = m.reqArr("idx");

		//\uc81c\ud55c
		if(0 < orderItem.findCount("( status != 10 OR user_id != " + userId + " ) AND id IN (" + m.join(",", idx) + ")")) {
			m.jsError(_message.get("alert.order_item.permission_delete"));
			return;
		}

		//\uc0ad\uc81c
		int newOrderId = order.getSequence();
		orderItem.item("order_id", newOrderId);
		orderItem.item("status", 20);
		if(!orderItem.update("status = 10 AND user_id = " + userId + " AND id IN (" + m.join(",", idx) + ")")) {
			m.jsError(_message.get("alert.common.error_modify"));
			return;
		}
	
		//\uc138\uc158
		mSession.put("last_order_id", newOrderId);
		mSession.save();

		m.jsReplace("../order/payment.jsp?oek=" + order.getOrderEk(newOrderId, userId), "parent");
		return;
	}
}

//\ucd9c\ub825
p.setLayout(!isMobile ? ch : "mobile");
p.setBody("order.cart_list");
p.setVar("p_title", "\uc7a5\ubc14\uad6c\ub2c8");
p.setVar("query", m.qs());
p.setVar("list_query", m.qs("id"));

p.setLoop("list", list);

p.setVar("move_dir", moveDir);
p.setVar("is_mobile", isMobile);
p.display();


    } catch (java.lang.Throwable _jsp_e) {
      pageContext.handlePageException(_jsp_e);
    } finally {
      _jsp_application.getJspApplicationContext().freePageContext(pageContext);
    }
  }

  private java.util.ArrayList _caucho_depends = new java.util.ArrayList();

  public java.util.ArrayList _caucho_getDependList()
  {
    return _caucho_depends;
  }

  public void _caucho_addDepend(com.caucho.vfs.PersistentDependency depend)
  {
    super._caucho_addDepend(depend);
    com.caucho.jsp.JavaPage.addDepend(_caucho_depends, depend);
  }

  public boolean _caucho_isModified()
  {
    if (_caucho_isDead)
      return true;
    if (com.caucho.server.util.CauchoSystem.getVersionId() != 6749855747778707107L)
      return true;
    for (int i = _caucho_depends.size() - 1; i >= 0; i--) {
      com.caucho.vfs.Dependency depend;
      depend = (com.caucho.vfs.Dependency) _caucho_depends.get(i);
      if (depend.isModified())
        return true;
    }
    return false;
  }

  public long _caucho_lastModified()
  {
    return 0;
  }

  public java.util.HashMap<String,java.lang.reflect.Method> _caucho_getFunctionMap()
  {
    return _jsp_functionMap;
  }

  public void init(ServletConfig config)
    throws ServletException
  {
    com.caucho.server.webapp.WebApp webApp
      = (com.caucho.server.webapp.WebApp) config.getServletContext();
    super.init(config);
    com.caucho.jsp.TaglibManager manager = webApp.getJspApplicationContext().getTaglibManager();
    com.caucho.jsp.PageContextImpl pageContext = new com.caucho.jsp.PageContextImpl(webApp, this);
  }

  public void destroy()
  {
      _caucho_isDead = true;
      super.destroy();
  }

  public void init(com.caucho.vfs.Path appDir)
    throws javax.servlet.ServletException
  {
    com.caucho.vfs.Path resinHome = com.caucho.server.util.CauchoSystem.getResinHome();
    com.caucho.vfs.MergePath mergePath = new com.caucho.vfs.MergePath();
    mergePath.addMergePath(appDir);
    mergePath.addMergePath(resinHome);
    com.caucho.loader.DynamicClassLoader loader;
    loader = (com.caucho.loader.DynamicClassLoader) getClass().getClassLoader();
    String resourcePath = loader.getResourcePathSpecificFirst();
    mergePath.addClassPath(resourcePath);
    com.caucho.vfs.Depend depend;
    depend = new com.caucho.vfs.Depend(appDir.lookup("order/cart_list.jsp"), -5241290817714376490L, false);
    com.caucho.jsp.JavaPage.addDepend(_caucho_depends, depend);
    depend = new com.caucho.vfs.Depend(appDir.lookup("order/init.jsp"), -4516818803732212507L, false);
    com.caucho.jsp.JavaPage.addDepend(_caucho_depends, depend);
    depend = new com.caucho.vfs.Depend(appDir.lookup("init.jsp"), -919485065315744250L, false);
    com.caucho.jsp.JavaPage.addDepend(_caucho_depends, depend);
  }
}
