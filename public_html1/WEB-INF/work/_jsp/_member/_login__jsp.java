/*
 * JSP generated by Resin-3.1.15 (built Mon, 13 Oct 2014 06:45:33 PDT)
 */

package _jsp._member;
import javax.servlet.*;
import javax.servlet.jsp.*;
import javax.servlet.http.*;
import java.util.*;
import java.io.*;
import dao.*;
import malgnsoft.db.*;
import malgnsoft.util.*;

public class _login__jsp extends com.caucho.jsp.JavaPage
{
  private static final java.util.HashMap<String,java.lang.reflect.Method> _jsp_functionMap = new java.util.HashMap<String,java.lang.reflect.Method>();
  private boolean _caucho_isDead;
  
  public void
  _jspService(javax.servlet.http.HttpServletRequest request,
              javax.servlet.http.HttpServletResponse response)
    throws java.io.IOException, javax.servlet.ServletException
  {
    javax.servlet.http.HttpSession session = request.getSession(true);
    com.caucho.server.webapp.WebApp _jsp_application = _caucho_getApplication();
    javax.servlet.ServletContext application = _jsp_application;
    com.caucho.jsp.PageContextImpl pageContext = _jsp_application.getJspApplicationContext().allocatePageContext(this, _jsp_application, request, response, null, session, 8192, true, false);
    javax.servlet.jsp.PageContext _jsp_parentContext = pageContext;
    javax.servlet.jsp.JspWriter out = pageContext.getOut();
    final javax.el.ELContext _jsp_env = pageContext.getELContext();
    javax.servlet.ServletConfig config = getServletConfig();
    javax.servlet.Servlet page = this;
    response.setContentType("text/html; charset=utf-8");
    request.setCharacterEncoding("UTF-8");
    try {
      

//request.setCharacterEncoding("utf-8");

final String BUILDVERSION = "22.10.01";

String docRoot = Config.getDocRoot();
String jndi = Config.getJndi();

Malgn m = new Malgn(request, response, out);

Form f = new Form("form1");
try { f.setRequest(request); }
catch(Exception ex) { out.print("Overflow file size. - " + ex.getMessage()); return; }

SiteDao Site = new SiteDao(); //Site.clear();
DataSet siteinfo = Site.getSiteInfo(request.getServerName());
SiteConfigDao SiteConfig = new SiteConfigDao(siteinfo.i("id"));
if(1 != siteinfo.i("status") || "".equals(siteinfo.s("doc_root"))) {
	m.jsReplace("about:blank", "top");
	return;
}

//Hashtable<String, String> siteconfig = SiteConfig.getSiteConfig(siteinfo.s("id"));
boolean isDevServer = -1 < request.getServerName().indexOf("lms.malgn.co.kr");
String webUrl = request.getScheme() + "://" + request.getServerName();
int port = request.getServerPort();
if(port != 80 && port != 443) webUrl += ":" + port;
String dataDir = siteinfo.s("doc_root") + "/data";
String tplRoot = siteinfo.s("doc_root") + "/html";
if(isDevServer && siteinfo.i("skin_cd") == 5) tplRoot = siteinfo.s("doc_root") + "/html_v5";
f.dataDir = dataDir;
m.dataDir = dataDir;
//m.dataUrl = "https://cdn.malgnlms.com/cdndata/" + siteinfo.s("ftp_id");
m.dataUrl = Config.getDataUrl() + (!"/data".equals(Config.getDataUrl()) ? siteinfo.s("ftp_id") : "");


if(!"".equals(siteinfo.s("logo"))) siteinfo.put("logo_url", m.getUploadUrl(siteinfo.s("logo")));
else siteinfo.put("logo_url", "/common/images/default/malgn_logo.jpg");

//IP\ucc28\ub2e8
String userIp = request.getRemoteAddr();
if(!"".equals(siteinfo.s("allow_ip_user")) && !Site.checkIP(userIp, siteinfo.s("allow_ip_user"))) {
	m.redirect("/main/guide.jsp");
	return;
}

Page p = new Page(tplRoot);
p.setRequest(request);
p.setPageContext(pageContext);
p.setWriter(out);
p.setBaseRoot("/home/lms/public_html/html");
if(siteinfo.i("skin_cd") == 5) p.setBaseRoot("/home/lms/public_html/html_v5");

//\uc5b8\uc5b4
String sysLocale = "".equals(siteinfo.s("locale")) ? "default" : siteinfo.s("locale");
Message _message = new Message(sysLocale);
_message.reloadAll();
m.setMessage(_message);
//p.setMessage(_message);

int siteId = siteinfo.i("id");
int userId = 0;
String loginId = "";
String loginMethod = "";
String userName = "";
String userEmail = "";
String userKind = "";
int userDeptId = 0;
String userGroups = "";
int userGroupDisc = 0;
//String aloginYn = "";
String userSessionId = "";
boolean userB2BBlock = false;
String userB2BName = "";
String userB2BFile = "";
String sysToday = m.time("yyyyMMdd");
String sysNow = m.time("yyyyMMddHHmmss");
boolean isRemoteHost = false;
boolean isRespWeb = (5 <= siteinfo.i("skin_cd"));
boolean isGoMobile = !isRespWeb && m.isMobile();

SessionDao mSession = new SessionDao(request, response);

Auth auth = new Auth(request, response);
auth.loginURL = "/member/login.jsp";
auth.keyName = "MLMS14" + siteId + "7";
if(0 < siteinfo.i("session_hour")) auth.setValidTime(siteinfo.i("session_hour") * 3600);
if(auth.isValid()) {
	userId = auth.getInt("ID");
	loginId = auth.getString("LOGINID");
	loginMethod = auth.getString("LOGINMETHOD");
	userName = auth.getString("NAME");
	userEmail = auth.getString("EMAIL");
	userKind = auth.getString("KIND");
	userDeptId = auth.getInt("DEPT");
	userGroups = auth.getString("GROUPS");
	userGroupDisc = !"null".equals(auth.getString("GROUPS_DISC")) ? m.parseInt(auth.getString("GROUPS_DISC")) : 0;
	//aloginYn = auth.getString("ALOGIN_YN");
	userSessionId = auth.getString("SESSIONID");
	userB2BName = auth.getString("B2BNAME");
	userB2BFile = auth.getString("B2BFILE");
	//isRemoteHost = "Y".equals(auth.getString("TUTOR_YN")) && "Y".equals(SiteConfig.s("kt_remote_yn"));
	isRemoteHost = "Y".equals(auth.getString("TUTOR_YN")) && ("L".equals(SiteConfig.s("lanedu_type")) || "B".equals(SiteConfig.s("lanedu_type")));
	if(userGroups != null) {
		if(-1 < userGroups.indexOf(",")) for(String userGroupId : m.split(",", userGroups)) p.setVar("SYS_USERGROUP_" + userGroupId, true);
		else p.setVar("SYS_USERGROUP_" + userGroups, true);
	}
	
	//2\ucc28\uc778\uc99d\uccb4\ud06c
	/*if("direct".equals(loginMethod)
		&& "Y".equals(siteinfo.s("user_auth2_yn"))
		&& !"Y".equals(auth.getString("USER_AUTH2_YN"))
		&& !"".equals(auth.getString("USER_AUTH2_TYPE"))
		&& !"malgn".equals(loginId)
		&& -1 == request.getRequestURI().indexOf("/main/site_cache.jsp")
		&& -1 == request.getRequestURI().indexOf("/member/auth2.jsp")
		&& -1 == request.getRequestURI().indexOf("/member/otpkey_register.jsp")
		&& -1 == request.getRequestURI().indexOf("/member/logout.jsp")
		&& -1 == request.getRequestURI().indexOf("/member/alogin.jsp")
		&& -1 == request.getRequestURI().indexOf("/member/slogin.jsp")
		&& -1 == request.getRequestURI().indexOf("/member/login_facebook.jsp")
		&& -1 == request.getRequestURI().indexOf("/member/login_google.jsp")
		&& -1 == request.getRequestURI().indexOf("/member/login_kakao.jsp")
		&& -1 == request.getRequestURI().indexOf("/member/login_line.jsp")
		&& -1 == request.getRequestURI().indexOf("/member/login_naver.jsp")
	) {
		m.jsReplace("/member/auth2.jsp?returl=" + m.rs("returl", "/main/index.jsp"), "top");
		return;
	}*/

	mSession.put("id", userSessionId);
	mSession.save();

	p.setVar("login_block", true);
} else {
	p.setVar("login_block", false);

	if(siteinfo.b("close_yn")) {
		boolean isNeedLogin = true;
		String[] exceptPages = m.split("|", siteinfo.s("close_except"));

		if(-1 < request.getRequestURI().indexOf("/member/login.jsp")
			|| -1 < request.getRequestURI().indexOf("/member/find.jsp")
			|| -1 < request.getRequestURI().indexOf("/member/alogin.jsp")
			|| -1 < request.getRequestURI().indexOf("/member/slogin.jsp")
			|| -1 < request.getRequestURI().indexOf("/member/slogin_input.jsp")
			|| -1 < request.getRequestURI().indexOf("/member/sysop_slogin.jsp")
			|| -1 < request.getRequestURI().indexOf("/main/site_cache.jsp")
			|| -1 < request.getRequestURI().indexOf("/mobile/login.jsp")
			|| -1 < request.getRequestURI().indexOf("/mypage/certificate.jsp")
			|| -1 < request.getRequestURI().indexOf("/mypage/certificate_course.jsp")
			|| -1 < request.getRequestURI().indexOf("/kollus/check_api.jsp")
			|| -1 < request.getRequestURI().indexOf("/ktle/check_api.jsp")
			|| -1 < request.getRequestURI().indexOf("/common/")
			|| -1 < request.getRequestURI().indexOf("/api/auto_send.jsp")
		) {
			isNeedLogin = false;
		} else if(!"".equals(siteinfo.s("close_except"))) {
			for(int i = 0; i < exceptPages.length; i++) {
				if(-1 < request.getRequestURI().indexOf(exceptPages[i])) { isNeedLogin = false; continue; }
			}
		}

		if(isNeedLogin) {
			m.redirect(!isGoMobile ? auth.loginURL : "/mobile/login.jsp");
			return;
		}
	}
}

userB2BBlock = !"".equals(userB2BName) && null != userB2BName;
p.setVar("SYS_HTTPHOST", request.getServerName());
p.setVar("SYS_LOGINID", loginId);
p.setVar("SYS_USERNAME", userName);
p.setVar("SYS_USEREMAIL", userEmail);
p.setVar("SYS_USERKIND", userKind);
p.setVar("SYS_DEPTID", userDeptId);
p.setVar("SYS_GROUP_DISC", userGroupDisc);
p.setVar("SYS_B2BBLOCK", userB2BBlock);
p.setVar("SYS_B2BNAME", userB2BName);
p.setVar("SYS_B2BFILE", userB2BFile);
p.setVar("SYS_PAGE_URL", request.getRequestURL() + (!"".equals(m.qs()) ? "?" + m.qs() : ""));
p.setVar("SYS_TITLE", siteinfo.s("site_nm"));
p.setVar("webUrl", webUrl);
p.setVar("SITE_INFO", siteinfo);
//p.setVar("SITE_CONFIG", siteconfig);
p.setVar("CURR_DATE", m.time("yyyyMMdd"));
p.setVar("SYS_EK", m.encrypt(loginId + siteinfo.s("sso_key") + m.time("yyyyMMdd"), "SHA-256"));
p.setVar("IS_RESP_WEB", isRespWeb);
p.setVar("IS_MOBILE", m.isMobile());
p.setVar("IS_GO_MOBILE", isGoMobile);
p.setVar("IS_DEV_SERVER", isDevServer);
p.setVar("SYS_LOCALE", sysLocale);
p.setVar("SYS_TODAY", sysToday);
p.setVar("SYS_NOW", sysNow);
p.setVar("IS_REMOTE_HOST", isRemoteHost);
p.setVar("SYS_COMMON_CDN", !isDevServer ? "//cdn.malgnlms.com" : "");
p.setVar("script", siteinfo.s("header_script"));

for(int IndexSkin = 1; IndexSkin < 5; IndexSkin++) {
	p.setVar("SKIN_LT_" + IndexSkin, siteinfo.i("skin_cd") < IndexSkin);
	p.setVar("SKIN_LTE_" + IndexSkin, siteinfo.i("skin_cd") <= IndexSkin);
	p.setVar("SKIN_GT_" + IndexSkin, siteinfo.i("skin_cd") > IndexSkin);
	p.setVar("SKIN_GTE_" + IndexSkin, siteinfo.i("skin_cd") >= IndexSkin);
}

MenuDao Menu = new MenuDao(p, sysLocale);

UserSessionDao UserSession = new UserSessionDao();
UserSession.setSiteId(siteId);
if(userId != 0 && !"SYSLOGIN".equals(userSessionId) && !siteinfo.b("duplication_yn") && !UserSession.isValid(userSessionId, userId)) {
	if(request.getRequestURI().indexOf("/member/logout.jsp") == -1 && request.getRequestURI().indexOf("/mobile/logout.jsp") == -1) {
		m.jsAlert(_message.get("alert.common.logout_session"));
		if(request.getRequestURI().indexOf("/mobile/") != -1) m.jsReplace("/mobile/logout.jsp?mode=session");
		else m.jsReplace("/member/logout.jsp?mode=session");
		return;
	}
}


      

String ch = "member";

String sslDomain = request.getServerName().indexOf(".malgn.co.kr") > 0 ? "ssl.malgn.co.kr" : "ssl.malgnlms.com";
boolean isSSL = "https".equals(request.getScheme()) && sslDomain.equals(request.getServerName()) && !"".equals(f.get("domain"));

if(siteinfo.b("ssl_yn")) {
	sslDomain = siteinfo.s("domain");
	isSSL = false;
}

//if("edu.kuca.kr".equals(f.get("domain"))) m.js("try { console.log(\"a - " + isSSL + " / " + siteinfo.i("id") + " / " + siteinfo.s("domain") + "\"); } catch {}");
if(isSSL) {
	//Site.remove(f.get("domain"));
	siteinfo = Site.getSiteInfo(f.get("domain"));
	if("".equals(siteinfo.s("doc_root"))) { m.jsError(_message.get("alert.site.nodata")); return; }
	siteId = siteinfo.i("id");
	
	SiteConfig = new SiteConfigDao(siteinfo.i("id"));

	mSession.put("id", f.get("session_id"));
}
p.setVar("SSL_DOMAIN", sslDomain);


      

//\ub85c\uadf8\uc778
if(userId != 0) {
	if(!userB2BBlock) m.redirect("../main/index.jsp");
	else m.redirect("../mypage/index.jsp");
	return;
}

//\ud3fc\uc785\ub825
String returl = m.rs("returl");

//SSO
if(siteinfo.b("sso_yn") && !"".equals(siteinfo.s("sso_url"))) {
	m.setSession("RETURL", returl);
	m.redirect(siteinfo.s("sso_url") + (!"".equals(returl) ? "?returl=" + m.urlencode(returl) : ""));
	return;
}
returl = !"".equals(returl) ? returl : "/mypage/index.jsp";
if((returl.startsWith("http://") || returl.startsWith("https://")) && 0 > returl.indexOf(siteinfo.s("domain"))) returl = "/mypage/index.jsp";
//if(!"".equals(mSession.s("b2b_domain"))) returl = "/mypage/course_list.jsp";

//\ud3fc\uc785\ub825
String id = m.rs("id");
String passwd = m.rs("passwd");
String accessToken = m.rs("access_token");
String ek = m.rs("ek");
int udid = m.ri("udid");

//\uac1d\uccb4
UserDao user = new UserDao();
FileDao file = new FileDao();
GroupDao group = new GroupDao();
UserDeptDao userDept = new UserDeptDao();
UserLoginDao userLogin = new UserLoginDao();

//\ud3fc\uccb4\ud06c
f.addElement("id", null, "hname:'\uc544\uc774\ub514', required:'Y'");
f.addElement("passwd", null, "hname:'\ube44\ubc00\ubc88\ud638', required:'Y'");
f.addElement("udid", null, "hname:'\ubd80\uc11c\uc544\uc774\ub514'");

//\uc815\ubcf4-B2B
boolean isB2B = false;
DataSet B2Binfo = new DataSet();
if(0 < udid) {
	B2Binfo = userDept.query(
		" SELECT a.id, a.b2b_nm, f.filename b2b_file "
		+ " FROM " + userDept.table + " a "
		+ " LEFT JOIN " + file.table + " f ON f.module = 'dept' AND f.module_id = a.id AND f.status = 1 "
		+ " WHERE a.id = ? AND a.site_id = ? AND a.status = 1 "
		, new Integer[] {udid, siteId}
	);
	if(B2Binfo.next()) {
		isB2B = true;
		B2Binfo.put("b2b_file_url", m.getUploadUrl(B2Binfo.s("b2b_file")));
	}
}

//SSL\uc778\uc99d\ucc98\ub9ac
boolean isToken = !"".equals(accessToken) && ek.equals(m.encrypt(accessToken + sslDomain + m.time("yyyyMMdd")));

if(m.isPost() || isToken) {
	if(!isToken && !f.validate()) { m.jsAlert(null != f.errMsg && !"".equals(f.errMsg) ? f.errMsg : "\uc62c\ubc14\ub978 \uc785\ub825\uc774 \uc544\ub2d9\ub2c8\ub2e4."); return; }

	DataSet info;
	ArrayList<Object> qs = new ArrayList<Object>();
	qs.add(siteId);
	qs.add(siteinfo.i("login_block_cnt"));
	qs.add(siteinfo.i("login_block_cnt"));
	if(0 < udid) qs.add(udid);

	if(isToken) {
		qs.add(accessToken);
		info = user.find(
			" site_id = ? AND (0 = ? OR fail_cnt < ?) "
			+ (0 < udid ? " AND dept_id = ? " : "")
			+ " AND access_token = ? AND status IN (1, 0, 30, 31) "
			, qs.toArray(), 1
		);

		//\uc138\uc158-SSL
		if("".equals(mSession.s("login_method"))) {
			mSession.put("login_method", "direct");
			mSession.save();
		}
	} else {
		qs.add(id);
		if(64 > passwd.length()) passwd = m.encrypt(passwd, "SHA-256");
		info = user.find(
			" site_id = ? AND (0 = ? OR fail_cnt < ?) "
			+ (0 < udid ? " AND dept_id = ? " : "")
			+ " AND login_id = ? AND status IN (1, 0, 30, 31) "
			, qs.toArray(), 1
		);

		//\uc138\uc158-SSL
		mSession.put("login_method", "direct");
		mSession.save();
	}

	if(info.next()) {
		if(!isToken && !passwd.equals(info.s("passwd"))) {
			//\uc81c\ud55c-\ube44\ubc00\ubc88\ud638\uc624\ub958
			user.item("fail_cnt", info.i("fail_cnt") + 1);
			if(!user.update("id = " + info.i("id") + " AND site_id = " + siteId)) { }

			m.jsAlert(
				_message.get("alert.member.reenter_info")
				+ (0 < siteinfo.i("login_block_cnt") ? _message.get("alert.member.rule_fail", new String[] {"login_block_cnt=>" + siteinfo.i("login_block_cnt")}) : "")
			); //\uc544\uc774\ub514/\ube44\ubc00\ubc88\ud638\ub97c \ud655\uc778\ud558\uc138\uc694. - \ube44\ubc00\ubc88\ud638 \uc624\ub958
			if(!isSSL) m.js("parent.resetPassword();");
			return;

		} else if(0 == info.i("status")) {
			if(0 == siteinfo.i("join_status")) m.jsError(_message.get("alert.member.wait_approve")); //\uc2b9\uc778\ub300\uae30\uc911\uc778 \uc544\uc774\ub514\uc785\ub2c8\ub2e4.
			else m.jsError(_message.get("alert.member.nodata")); //\ud68c\uc6d0 \uc815\ubcf4\uac00 \uc5c6\uc2b5\ub2c8\ub2e4.
			return;

		} else {

			//\ubcc0\uc218
			String replaceUrl = "";

			//\ud734\uba74\ud68c\uc6d0\uc778 \uacbd\uc6b0
			if(31 == info.i("status")) {
				m.jsAlert(_message.get("alert.member.wake")); //\ud734\uba74\ud68c\uc6d0\uc73c\ub85c \uc804\ud658\ub418\uc5b4 \ubcf8\uc778\uc778\uc99d \ud6c4 \uc11c\ube44\uc2a4\ub97c \uc774\uc6a9\ud558\uc2e4 \uc218 \uc788\uc2b5\ub2c8\ub2e4.
				replaceUrl = "/member/sleep_awake.jsp";

			//\uac1c\uc778\uc815\ubcf4\ud65c\uc6a9\uc5d0 \ub3d9\uc758\ud558\uc9c0 \uc54a\uc740 \uacbd\uc6b0
			} else if(!"Y".equals(info.s("privacy_yn")) && "Y".equals(siteinfo.s("sso_privacy_yn"))) {
				ek = m.encrypt("PRIVACY_" + info.s("id") + "_AGREE_" + m.time("yyyyMMdd"));
				replaceUrl = "/member/privacy_agree.jsp?id=" + info.s("id") + "&ek=" + ek;

			//\uc815\uc0c1\ud68c\uc6d0\uc778 \uacbd\uc6b0
			} else {
				if(!isSSL) {
					UserSession.setUserId(info.i("id"));
					UserSession.setSession(mSession.s("id"));

					String tmpGroups = group.getUserGroup(info);
					auth.put("ID", info.s("id"));
					auth.put("LOGINID", info.s("login_id"));
					auth.put("LOGINMETHOD", (!"".equals(mSession.s("login_method")) ? mSession.s("login_method") : "direct"));
					auth.put("KIND", info.s("user_kind"));
					auth.put("NAME", info.s("user_nm"));
					auth.put("EMAIL", info.s("email"));
					auth.put("DEPT", info.i("dept_id"));
					auth.put("SESSIONID", mSession.s("id"));
					auth.put("GROUPS", tmpGroups);
					auth.put("GROUPS_DISC", group.getMaxDiscRatio());
					auth.put("B2BNAME", B2Binfo.s("b2b_nm"));
					auth.put("B2BFILE", B2Binfo.s("b2b_file_url"));
					auth.put("TUTOR_YN", "Y".equals(info.s("tutor_yn")) ? "Y" : "N");
					if("direct".equals(auth.getString("LOGINMETHOD"))) { //ID,PW\uc785\ub825 \ub85c\uadf8\uc778\uc5d0\uc11c\ub9cc 2\ucc28\uc778\uc99d \uc0ac\uc6a9
						auth.put("USER_AUTH2_YN", info.b("auth2_yn") ? "N" : "Y");
						auth.put("USER_AUTH2_TYPE", info.s("auth2_type"));
					} else {
						auth.put("USER_AUTH2_YN", "Y");
						auth.put("USER_AUTH2_TYPE", "");
					}
					//auth.put("ALOGIN_YN", "N");
					auth.setAuthInfo();

					user.item("fail_cnt", 0);
					user.item("conn_date", m.time("yyyyMMddHHmmss"));
					user.item("access_token", "");
					if(30 == info.i("status")) user.item("status", 1);
					if(!user.update("id = " + info.i("id"))) {
						m.jsAlert(_message.get("alert.member.error_login")); //\ub85c\uadf8\uc778\ud558\ub294 \uc911 \uc624\ub958\uac00 \ubc1c\uc0dd\ud588\uc2b5\ub2c8\ub2e4.
						m.js("parent.resetPassword();");
						return;
					}

					//\ub85c\uadf8
					userLogin.item("id", userLogin.getSequence());
					userLogin.item("site_id", siteId);
					userLogin.item("user_id", info.i("id"));
					userLogin.item("admin_yn", "N");
					userLogin.item("login_type", "I");
					userLogin.item("ip_addr", request.getRemoteAddr());
					userLogin.item("agent", request.getHeader("user-agent"));
					userLogin.item("device", userLogin.getDeviceType(request.getHeader("user-agent")));
					userLogin.item("log_date", m.time("yyyyMMdd"));
					userLogin.item("reg_date", m.time("yyyyMMddHHmmss"));
					if(!userLogin.insert()) { }

					//\ubcf4\uc548
					if(info.s("passwd").equals(m.encrypt(info.s("login_id"), "SHA-256"))) {
						m.jsAlert(_message.get("alert.member.change_password_by_policy")); //\ubcf4\uc548 \uc815\ucc45\uc0c1 \ube44\ubc00\ubc88\ud638 \ubcc0\uacbd\uc774 \ud544\uc694\ud569\ub2c8\ub2e4.
						replaceUrl = "/mypage/modify_passwd.jsp";

					//\ube44\ubc00\ubc88\ud638\ubcc0\uacbd\uc548\ub0b4\uc77c\ub3c4\ub2ec
					} else if(0 < siteinfo.i("passwd_day") && (8 != info.s("passwd_date").length() || -1 < m.diffDate("D", info.s("passwd_date"), m.time("yyyyMMdd")))) {
						replaceUrl = "/mypage/modify_passwd.jsp?mode=expired&returl=" + m.urlencode(returl);
					}
				} else {
					accessToken = m.md5(m.getUniqId());
					ek = m.encrypt(accessToken + sslDomain + m.time("yyyyMMdd"));
					user.item("access_token", accessToken);
					user.update("id = " + info.i("id") + " AND site_id = " + siteId);
					//m.redirect("http://" + f.get("domain") + "/member/login.jsp?access_token=" + accessToken + "&ek=" + ek);
					m.jsReplace("http://" + f.get("domain") + "/member/login.jsp?returl=" + m.urlencode(returl) + "&access_token=" + accessToken + "&ek=" + ek + (0 < udid ? "&udid=" + udid : ""));
					return;
				}

			}

			//\uc774\ub3d9
			if("".equals(replaceUrl)) replaceUrl = returl;
			else replaceUrl = (siteinfo.b("ssl_yn") ? "https://" : "http://") + siteinfo.s("domain") + replaceUrl;
			m.jsReplace(replaceUrl, "parent");
			return;
		}
	}

	if(isToken) {
		if(0 == siteinfo.i("join_status")) m.jsError(_message.get("alert.member.wait_approve")); //\uc2b9\uc778\ub300\uae30\uc911\uc778 \uc544\uc774\ub514\uc785\ub2c8\ub2e4.
		else m.jsError(_message.get("alert.member.nodata")); //\ud68c\uc6d0 \uc815\ubcf4\uac00 \uc5c6\uc2b5\ub2c8\ub2e4.
	} else {
		m.jsAlert(
			_message.get("alert.member.reenter_info")
			+ (0 < siteinfo.i("login_block_cnt") ? _message.get("alert.member.rule_fail", new String[] {"login_block_cnt=>" + siteinfo.i("login_block_cnt")}) : "")
		); //\uc544\uc774\ub514/\ube44\ubc00\ubc88\ud638\ub97c \ud655\uc778\ud558\uc138\uc694. - \uc815\ubcf4\uc5c6\uc74c
	}
	if(!isSSL) m.js("parent.resetPassword();");
	return;
} else if(m.isPost() && !f.validate()) {
	m.jsAlert(_message.get("alert.member.reenter_info"));
	return;
}


//\ud0c0\uc0ac\uc544\uc774\ub514\uc5f0\ub3d9\uc815\ubcf4
String[] oauths = !"".equals(siteinfo.s("oauth_vendor")) ? m.split("|", siteinfo.s("oauth_vendor")) : new String[0];
DataSet olist = m.arr2loop(oauths);
while(olist.next()) {
	olist.put("vendor_nm", m.getValue(olist.s("name"), Site.oauthVendorsMsg));
	olist.put("en_name", olist.s("name").substring(0, 1).toUpperCase() + olist.s("name").substring(1));
}

//\ucd9c\ub825
p.setLayout(ch);
p.setBody("member.login");
p.setVar("p_title", "\ub85c\uadf8\uc778");
p.setVar("query", m.qs());
p.setVar("list_query", m.qs("id"));
p.setVar("form_script", f.getScript());
p.setVar("is_login_page", true);

p.setLoop("oauth_list", olist);

p.setVar("returl_conv", m.urlencode(returl));
p.setVar("auth_block", siteinfo.b("auth_login_yn"));
p.setVar("oauth_block", 0 < olist.size());
p.setVar("close_block", siteinfo.b("close_yn") || isB2B);
p.setVar("domain", request.getServerName());

p.setVar("is_b2b", isB2B);
p.setVar("b2binfo", B2Binfo);
p.display();


    } catch (java.lang.Throwable _jsp_e) {
      pageContext.handlePageException(_jsp_e);
    } finally {
      _jsp_application.getJspApplicationContext().freePageContext(pageContext);
    }
  }

  private java.util.ArrayList _caucho_depends = new java.util.ArrayList();

  public java.util.ArrayList _caucho_getDependList()
  {
    return _caucho_depends;
  }

  public void _caucho_addDepend(com.caucho.vfs.PersistentDependency depend)
  {
    super._caucho_addDepend(depend);
    com.caucho.jsp.JavaPage.addDepend(_caucho_depends, depend);
  }

  public boolean _caucho_isModified()
  {
    if (_caucho_isDead)
      return true;
    if (com.caucho.server.util.CauchoSystem.getVersionId() != 6749855747778707107L)
      return true;
    for (int i = _caucho_depends.size() - 1; i >= 0; i--) {
      com.caucho.vfs.Dependency depend;
      depend = (com.caucho.vfs.Dependency) _caucho_depends.get(i);
      if (depend.isModified())
        return true;
    }
    return false;
  }

  public long _caucho_lastModified()
  {
    return 0;
  }

  public java.util.HashMap<String,java.lang.reflect.Method> _caucho_getFunctionMap()
  {
    return _jsp_functionMap;
  }

  public void init(ServletConfig config)
    throws ServletException
  {
    com.caucho.server.webapp.WebApp webApp
      = (com.caucho.server.webapp.WebApp) config.getServletContext();
    super.init(config);
    com.caucho.jsp.TaglibManager manager = webApp.getJspApplicationContext().getTaglibManager();
    com.caucho.jsp.PageContextImpl pageContext = new com.caucho.jsp.PageContextImpl(webApp, this);
  }

  public void destroy()
  {
      _caucho_isDead = true;
      super.destroy();
  }

  public void init(com.caucho.vfs.Path appDir)
    throws javax.servlet.ServletException
  {
    com.caucho.vfs.Path resinHome = com.caucho.server.util.CauchoSystem.getResinHome();
    com.caucho.vfs.MergePath mergePath = new com.caucho.vfs.MergePath();
    mergePath.addMergePath(appDir);
    mergePath.addMergePath(resinHome);
    com.caucho.loader.DynamicClassLoader loader;
    loader = (com.caucho.loader.DynamicClassLoader) getClass().getClassLoader();
    String resourcePath = loader.getResourcePathSpecificFirst();
    mergePath.addClassPath(resourcePath);
    com.caucho.vfs.Depend depend;
    depend = new com.caucho.vfs.Depend(appDir.lookup("member/login.jsp"), 5240298848689144412L, false);
    com.caucho.jsp.JavaPage.addDepend(_caucho_depends, depend);
    depend = new com.caucho.vfs.Depend(appDir.lookup("member/init.jsp"), 9054591303382699975L, false);
    com.caucho.jsp.JavaPage.addDepend(_caucho_depends, depend);
    depend = new com.caucho.vfs.Depend(appDir.lookup("init.jsp"), 6326164006358099841L, false);
    com.caucho.jsp.JavaPage.addDepend(_caucho_depends, depend);
  }
}
