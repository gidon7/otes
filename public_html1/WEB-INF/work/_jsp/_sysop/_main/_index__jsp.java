/*
 * JSP generated by Resin-3.1.15 (built Mon, 13 Oct 2014 06:45:33 PDT)
 */

package _jsp._sysop._main;
import javax.servlet.*;
import javax.servlet.jsp.*;
import javax.servlet.http.*;
import java.util.*;
import java.io.*;
import dao.*;
import malgnsoft.db.*;
import malgnsoft.util.*;

public class _index__jsp extends com.caucho.jsp.JavaPage
{
  private static final java.util.HashMap<String,java.lang.reflect.Method> _jsp_functionMap = new java.util.HashMap<String,java.lang.reflect.Method>();
  private boolean _caucho_isDead;
  
  public void
  _jspService(javax.servlet.http.HttpServletRequest request,
              javax.servlet.http.HttpServletResponse response)
    throws java.io.IOException, javax.servlet.ServletException
  {
    javax.servlet.http.HttpSession session = request.getSession(true);
    com.caucho.server.webapp.WebApp _jsp_application = _caucho_getApplication();
    javax.servlet.ServletContext application = _jsp_application;
    com.caucho.jsp.PageContextImpl pageContext = _jsp_application.getJspApplicationContext().allocatePageContext(this, _jsp_application, request, response, null, session, 8192, true, false);
    javax.servlet.jsp.PageContext _jsp_parentContext = pageContext;
    javax.servlet.jsp.JspWriter out = pageContext.getOut();
    final javax.el.ELContext _jsp_env = pageContext.getELContext();
    javax.servlet.ServletConfig config = getServletConfig();
    javax.servlet.Servlet page = this;
    response.setContentType("text/html; charset=utf-8");
    request.setCharacterEncoding("UTF-8");
    try {
      

String docRoot = Config.getDocRoot();
String jndi = Config.getJndi();
String tplRoot = Config.getDocRoot() + "/sysop/html";

Malgn m = new Malgn(request, response, out);

Form f = new Form("form1");
try { f.setRequest(request); } catch (Exception ex) { out.print("\uc81c\ud55c \uc6a9\ub7c9 \ucd08\uacfc - " + ex.getMessage()); return; }

Page p = new Page(tplRoot);
p.setRequest(request);
p.setPageContext(pageContext);
p.setWriter(out);
p.setBaseRoot("/home/lms/public_html/html");

SiteDao Site = new SiteDao();
DataSet siteinfo = Site.getSiteInfo(request.getServerName(), "sysop");
SiteConfigDao SiteConfig = new SiteConfigDao(siteinfo.i("id"));
if(1 != siteinfo.i("sysop_status") || "".equals(siteinfo.s("doc_root"))
|| (14 == siteinfo.s("close_date").length()
&& 0 < m.diffDate("I", siteinfo.s("close_date"), m.time("yyyyMMddHHmmss")))
) {
	m.jsReplace("/main/guide.jsp", "top"); return; }
//Hashtable<String, String> siteconfig = SiteConfig.getSiteConfig(siteinfo.s("id"));

String siteDomain = request.getScheme() + "://" + request.getServerName();
int port = request.getServerPort();
if(port != 80) siteDomain += ":" + port;
String webUrl = siteDomain + "/sysop";

String dataDir = siteinfo.s("doc_root") + "/data";
f.dataDir = dataDir;
m.dataDir = dataDir;
m.dataUrl = Config.getDataUrl() + (!"/data".equals(Config.getDataUrl()) ? siteinfo.s("ftp_id") : "");

boolean isDevServer = -1 < request.getServerName().indexOf("lms.malgn.co.kr");
siteinfo.put("logo_url", (!"/data".equals(Config.getDataUrl()) ? "" : siteDomain) + m.getUploadUrl(siteinfo.s("logo")));

//IP\ucc28\ub2e8
String userIp = request.getRemoteAddr();
boolean isMalgnOffice = "106.244.224.183".equals(userIp) || "125.129.123.211".equals(userIp) || "59.5.222.106".equals(userIp) || "3.35.211.181".equals(userIp);
if(!"".equals(siteinfo.s("allow_ip_sysop")) && !isMalgnOffice && !Site.checkIP(userIp, siteinfo.s("allow_ip_sysop"))) {
	m.redirect("/");
	return;
}

//\uc5b8\uc5b4
String sysLocale = "".equals(siteinfo.s("locale")) ? "default" : siteinfo.s("locale");
//String sysLocale = "default";
Message _message = new Message(sysLocale);
_message.reloadAll();
m.setMessage(_message);
//p.setMessage(_message);

//\uae30\ubcf8 \ud68c\uc6d0\uc815\ubcf4
int siteId = siteinfo.i("id");
int userId = 0;
String loginId = "";
String userName = "";
String userKind = "";
int userDeptId = 0;
String userGroups = "";
String manageCourses = "";
String userSessionId = "";
String pagreeDate = "";
boolean isUserMaster = false;
String winTitle = "[\uad00\ub9ac\uc790] " + siteinfo.s("site_nm");
String sysToday = m.time("yyyyMMdd");
String sysNow = m.time("yyyyMMddHHmmss");
String surl = request.getRequestURL() + (!"".equals(m.qs()) ? "?" + m.qs() : "");
final int sysExcelCnt = 20000;

SessionDao mSession = new SessionDao(request, response);

//\ub85c\uadf8\uc778 \uc5ec\ubd80\ub97c \uccb4\ud06c
Auth auth = new Auth(request, response);
auth.loginURL = "/sysop/main/login.jsp";
auth.keyName = "MLMSKEY2014" + siteId + "7";
if(0 < siteinfo.i("sysop_session_hour")) auth.setValidTime(siteinfo.i("sysop_session_hour") * 60);
if(auth.isValid()) {
	userId = m.parseInt(auth.getString("ID"));
	loginId = auth.getString("LOGINID");
	userName = auth.getString("NAME");
	userKind = auth.getString("KIND");
	userDeptId = auth.getInt("DEPT");
	userGroups = auth.getString("GROUPS");
	manageCourses = auth.getString("MANAGE_COURSES");
	userSessionId = userSessionId = auth.getString("SESSIONID");
	pagreeDate = auth.getString("PAGREE_DATE");
	isUserMaster = "Y".equals(auth.getString("IS_USER_MASTER"));

	//2\ucc28\uc778\uc99d\uccb4\ud06c
	/*if("Y".equals(siteinfo.s("auth2_yn"))
		&&!"Y".equals(auth.getString("AUTH2_YN"))
		&& !"".equals(siteinfo.s("auth2_type"))
		&& !"malgn".equals(loginId)
		&& request.getRequestURI().indexOf("/main/auth2.jsp") == -1
		&& request.getRequestURI().indexOf("/main/otpkey_register.jsp") == -1
		&& request.getRequestURI().indexOf("/sysop/main/logout.jsp") == -1
	) {
		m.jsReplace("/sysop/main/auth2.jsp?returl=" + m.rs("returl", "/sysop/index.jsp"), "top");
		return;
	}*/

	mSession.put("id", userSessionId);
	mSession.save();

} else {
	if(request.getRequestURI().indexOf("/main/login.jsp") == -1
		&& request.getRequestURI().indexOf("/vod/upload.jsp") == -1
		&& request.getRequestURI().indexOf("/main/slogin.jsp") == -1
		&& request.getRequestURI().indexOf("/site/site_template.jsp") == -1
		&& request.getRequestURI().indexOf("/site/site_maildir.jsp") == -1
		&& (request.getRequestURI().indexOf("/user/sleep_insert.jsp") == -1 || !"log".equals(m.rs("after")))
	) {
		m.jsReplace(auth.loginURL, "top");
		return;
	}
}

MenuDao Menu = new MenuDao(p, siteId, "default");
SiteMenuDao SiteMenu = new SiteMenuDao();

boolean superBlock = "S".equals(userKind);
boolean adminBlock = "S".equals(userKind) || "A".equals(userKind);
boolean courseManagerBlock = "C".equals(userKind);
boolean deptManagerBlock = "D".equals(userKind);

//boolean isAuthCrm = superBlock || (-1 < siteinfo.s("auth_crm").indexOf("|" + userKind + "|"));
boolean isAuthCrm = superBlock || Menu.accessible(-999, userId, userKind, false);

//\ub85c\uadf8\uc544\uc6c3-\uacfc\uc815\uc6b4\uc601\uc790
if(courseManagerBlock && "".equals(manageCourses) && request.getRequestURI().indexOf("/main/logout.jsp") == -1) {
	m.jsAlert("\ub2f4\ub2f9\ud55c \uacfc\uc815\uc774 \uc5c6\uc2b5\ub2c8\ub2e4.\\n \uad00\ub9ac\uc790\uc5d0\uac8c \ubb38\uc758\ud558\uc138\uc694.");
	m.jsReplace("/sysop/main/logout.jsp", "top");
	return;
}

//\ub9e4\ub274\uc5bc
ManualDao Manual = new ManualDao();
int ManualId = Menu.getOneInt("SELECT manual_id FROM " + Menu.table + " WHERE link = '" + m.replace(request.getRequestURI(), "/sysop", "..") + "'");
if(0 < ManualId) {
	int ManualStatus = Manual.getOneInt("SELECT status FROM " + Manual.table + " WHERE id = " + ManualId);
	if(0 < ManualStatus) p.setVar("SYS_MENU_MANUAL_ID", ManualId);
}

p.setVar("WEB_URL", webUrl);
p.setVar("FRONT_URL", siteDomain);
p.setVar("SYS_TITLE", winTitle);
p.setVar("SYS_USERKIND", userKind);
p.setVar("SITE_INFO", siteinfo);
//p.setVar("SITE_CONFIG", siteconfig);
p.setVar("IS_AUTH_CRM", isAuthCrm);
p.setVar("IS_DEV_SERVER", isDevServer);
p.setVar("SYS_LOCALE", sysLocale);
p.setVar("SYS_TODAY", sysToday);
p.setVar("SYS_NOW", sysNow);
p.setVar("SYS_COMMON_CDN", !isDevServer ? "//cdn.malgnlms.com" : "");

p.setVar("user_master_block", isUserMaster || isMalgnOffice);
p.setVar("super_malgn_block", isMalgnOffice && siteinfo.i("super_id") == userId);
p.setVar("malgn_office_block", isMalgnOffice);
p.setVar("super_block", superBlock);
p.setVar("admin_block", adminBlock);
p.setVar("course_manager_block", courseManagerBlock);
p.setVar("dept_manager_block", deptManagerBlock);
p.setVar("SYS_URL", surl);

boolean isBlindUser = !sysToday.equals(pagreeDate);
p.setVar("SYS_BLINDUSER", isBlindUser);

UserSessionDao UserSession = new UserSessionDao();
UserSession.setSiteId(siteId);
UserSession.setType("sysop");
if(userId != 0 && !"SYSLOGIN".equals(userSessionId) && "N".equals(siteinfo.s("dup_sysop_yn")) && ("".equals(userSessionId) || userSessionId == null || !UserSession.isValid(userSessionId, userId))) {
	if(request.getRequestURI().indexOf("/sysop/main/logout.jsp") == -1) {
		m.jsAlert("\uc138\uc158\uc774 \ub9cc\ub8cc\ub418\uc5c8\uac70\ub098 \uc911\ubcf5 \ub85c\uadf8\uc778\uc774 \ub418\uc5b4 \uc790\ub3d9\uc73c\ub85c \ub85c\uadf8\uc544\uc6c3 \ub429\ub2c8\ub2e4.");
		m.jsReplace("/sysop/main/logout.jsp?mode=session", "top");
		return;
	}
}

InfoLogDao _log = new InfoLogDao(siteId); _log.setItems(userId, "B", surl, userIp);
InfoUserDao _logUser = new InfoUserDao(siteId);


      

int newHour = 24;	//\uc0c8\uae00\uae30\uc900(\uc2dc\uac04)

//\ucc44\ub110
String ch = "sysop"; 


      

//\uac1d\uccb4
OrderDao order = new OrderDao();
OrderItemDao orderItem = new OrderItemDao();
RefundDao refund = new RefundDao();
NoticeDao notice = new NoticeDao();
NoticeLogDao noticeLog = new NoticeLogDao(siteId);
CourseDao course = new CourseDao();
CourseUserDao courseUser = new CourseUserDao();
LmCategoryDao lmCategory = new LmCategoryDao("course");
BoardDao board = new BoardDao();
PostDao post = new PostDao();
PostLogDao postLog = new PostLogDao(siteId);
CategoryDao category = new CategoryDao();
ClBoardDao clBoard = new ClBoardDao();
ClPostDao clPost = new ClPostDao();
UserDao user = new UserDao();
UserOutDao userOut = new UserOutDao();
UserDeptDao userDept = new UserDeptDao();

//\uce74\ud14c\uace0\ub9ac
DataSet categories = lmCategory.getList(siteId);

//\ubcc0\uc218
String today = m.time("yyyyMMdd");
String sdate = m.time("yyyyMM") + "01";
String edate = m.time("yyyyMM") + "31";

//\ubaa9\ub85d-\ub2f9\uc6d4\ub9e4\ucd9c
DataSet statOrder = order.find(
	"order_date >= '" + sdate + "' AND order_date <= '" + edate + "' AND site_id = " + siteId + ""
	, "status, pay_price, refund_price"
);
int cntDone = 0; int sumDone = 0;
int cntWait = 0; int sumWait = 0;
int cntCancel = 0; int sumCancel = 0;
while(statOrder.next()) {
	if(statOrder.i("status") == 1 || statOrder.i("status") == 3) { //\uc644\ub8cc \ub610\ub294 \ubd80\ubd84\ud658\ubd88
		cntDone++;
		sumDone += statOrder.i("pay_price") - statOrder.i("refund_price");
	} else if(statOrder.i("status") == 2) { //\ub300\uae30
		cntWait++;
		sumWait += statOrder.i("pay_price");
	} else if(statOrder.i("status") == -2) { //\ucde8\uc18c
		cntCancel++;
		sumCancel += statOrder.i("pay_price");
	}
}

//\ubaa9\ub85d-\ub2f9\uc6d4\ud658\ubd88
Hashtable<String, Double> priceMap = new Hashtable<String, Double>();
Hashtable<String, Integer> countMap = new Hashtable<String, Integer>();
DataSet statRefund = refund.query(
	" SELECT SUM(a.refund_price) price, COUNT(*) cnt "
	+ " FROM " + refund.table + " a "
	+ " INNER JOIN " + order.table + " o ON a.order_id = o.id "
	+ " WHERE a.status = 2 AND a.refund_date >= '" + sdate + "000000' AND a.refund_date <= '" + edate + "235959' AND o.site_id = " + siteId + ""
);
while(statRefund.next()) {
	statRefund.put("cnt_conv", m.nf(statRefund.i("cnt")));
	statRefund.put("price_conv", m.nf(statRefund.i("price")));
}

//\ubaa9\ub85d-\uacfc\uc815\ud1b5\uacc4
int totalCourseCnt = 0;
DataSet cstat = course.query(
	"SELECT onoff_type, COUNT(*) cnt "
	+ " FROM " + course.table + " "
	+ " WHERE status = 1 AND site_id = " + siteId + " "
	+ " GROUP BY onoff_type "
	+ " ORDER BY onoff_type DESC "
);
while(cstat.next()) {
	cstat.put("onoff_type_conv", m.getItem(cstat.s("onoff_type"), course.onoffPackageTypes));
	cstat.put("cnt_conv", m.nf(cstat.i("cnt")));
	totalCourseCnt += cstat.i("cnt");
}

//\uc815\ubcf4-\uc218\uac15\ud604\ud669
int openACourseCnt = 0;
int openRCourseCnt = 0;
int stopCourseCnt = 0;
int waitCourseCnt = 0;
int finishCourseCnt = 0;
DataSet allCourses = course.find("status = 1 AND site_id = " + siteId + " ", "course_type, study_sdate, study_edate, display_yn");
while(allCourses.next()) {
	if("R".equals(allCourses.s("course_type")) && (allCourses.i("study_sdate") > Integer.parseInt(m.time("yyyyMMdd")))) waitCourseCnt++;
	else if("R".equals(allCourses.s("course_type")) && (allCourses.i("study_edate") < Integer.parseInt(m.time("yyyyMMdd")))) finishCourseCnt++;
	else if("Y".equals(allCourses.s("display_yn")))
		if("R".equals(allCourses.s("course_type"))) openRCourseCnt++;
		else openACourseCnt++;
	else if("N".equals(allCourses.s("display_yn"))) stopCourseCnt++;
}

//\ubaa9\ub85d-\uc11c\ube44\uc2a4\uacf5\uc9c0
DataSet notices = notice.find("status = 1", "*", "id desc", 5);
while(notices.next()) {
	notices.put("category_conv", m.getItem(notices.s("category"), notice.categories));
	notices.put("subject_conv", m.cutString(notices.s("subject"), 150));
	notices.put("reg_date_conv", m.time("yyyy.MM.dd", notices.s("reg_date")));
	notices.put("new_block", m.diffDate("H", notices.s("reg_date"), m.time("yyyyMMddHHmmss")) <= newHour);
}
//notice.d(out);
DataSet ninfo = notice.query(
	" SELECT a.* "
	+ " FROM " + notice.table + " a "
	+ " WHERE a.status = 1 AND 1 > (SELECT COUNT(*) FROM " + noticeLog.table + " WHERE notice_id = a.id AND user_id = " + userId + ") "
	+ " AND a.reg_date >= '" + m.addDate("D", -7, today, "yyyyMMdd") + "000000' "
	+ " ORDER BY a.id DESC "
	+ " LIMIT 1 "
);
if(ninfo.next()) {
	ninfo.put("category_conv", m.getItem(ninfo.s("category"), notice.categories));
	ninfo.put("subject_conv", m.cutString(ninfo.s("subject"), 150));
	ninfo.put("reg_date_conv", m.time("yyyy.MM.dd", ninfo.s("reg_date")));
	ninfo.put("new_block", m.diffDate("H", ninfo.s("reg_date"), m.time("yyyyMMddHHmmss")) <= newHour);
}

//\ubaa9\ub85d-QNA
//DataSet qnas = post.find(
	//"site_id = " + siteId + " AND status > -1 AND board_id = 10 AND depth = 'A'"
	//, "*", "thread asc, depth asc", 5
//);

DataSet qnas = post.query(
	" ( SELECT a.id, 0 course_user_id, a.user_id, a.writer, a.subject, a.secret_yn, a.proc_status, a.reg_date "
	+ " , b.id board_id, b.code, 0 course_id, b.board_nm, c.category_nm, u.login_id, pu.id assign_id, pu.user_nm assign_nm, pu.login_id assign_login_id "
	+ " FROM " + post.table + " a "
	+ " INNER JOIN " + board.table + " b ON a.board_id = b.id AND b.site_id = " + siteId + " AND b.board_type = 'qna' AND b.status != -1 "
	+ " LEFT JOIN " + category.table + " c ON a.category_id = c.id AND c.site_id = " + siteId + ""
	+ " LEFT JOIN " + user.table + " u ON a.user_id = u.id AND u.site_id = " + siteId + ""
	+ " LEFT JOIN " + postLog.table + " pl ON a.id = pl.post_id AND pl.log_type = 'assign' AND pl.site_id = " + siteId + " "
	+ " LEFT JOIN " + user.table + " pu ON pl.user_id = pu.id AND pu.site_id = " + siteId + " "
	+ " WHERE a.site_id = " + siteId + " AND a.status > -1 AND a.depth = 'A' ) "
	+ " UNION "
	+ " ( SELECT a.id, a.course_user_id, a.user_id, a.writer, a.subject, a.secret_yn, a.proc_status, a.reg_date "
	+ " , b.id board_id, b.code, b.course_id, c.course_nm board_nm, '' category_nm, u.login_id, 0 assign_id, '' assign_nm, '' assign_login_id "
	+ " FROM " + clPost.table + " a "
	+ " INNER JOIN " + clBoard.table + " b ON a.board_id = b.id AND b.site_id = " + siteId + " AND b.board_type = 'qna' "
	+ " INNER JOIN " + course.table + " c ON b.course_id = c.id AND c.site_id = " + siteId + " AND c.status != -1 "
	+ " LEFT JOIN " + user.table + " u ON a.user_id = u.id AND u.site_id = " + siteId + ""
	+ " WHERE a.site_id = " + siteId + " AND a.status > -1 AND a.depth = 'A' ) "
	+ " ORDER BY proc_status asc, reg_date desc "
	, 20
);

while(qnas.next()) {
	qnas.put("reg_date_conv", m.time("yyyy.MM.dd", qnas.s("reg_date")));
	qnas.put("proc_status_conv", m.getItem(qnas.s("proc_status"), post.procStatusList));
	qnas.put("new_block", m.diffDate("H", qnas.s("reg_date"), m.time("yyyyMMddHHmmss")) <= newHour);
}

//\ubaa9\ub85d-\uc218\uac15\uc2e0\uccad\uae30\uac04\uc778\uacfc\uc815
DataSet requestCourses = course.query(
	"SELECT a.*, (SELECT COUNT(*) FROM " + courseUser.table + " WHERE course_id = a.id AND status IN (0,1,2,3)) user_cnt FROM " + course.table + " a "
	+ " WHERE status = 1 AND display_yn = 'Y' AND site_id = " + siteId + " AND request_sdate <= " + today + " AND request_edate >= " + today + " "
	+ " ORDER BY request_sdate DESC, reg_date DESC "
	+ " LIMIT 0, 10 "
);
while(requestCourses.next()) {
	requestCourses.put("cate_name", lmCategory.getTreeNames(requestCourses.i("category_id")));
	requestCourses.put("onoff_type_conv", m.getItem(requestCourses.s("onoff_type"), course.onoffPackageTypes));
	requestCourses.put("request_sdate_conv", m.time("yyyy.MM.dd", requestCourses.s("request_sdate")));
	requestCourses.put("request_edate_conv", m.time("yyyy.MM.dd", requestCourses.s("request_edate")));
	requestCourses.put("user_cnt_conv", m.nf(requestCourses.i("user_cnt")));
}

//\ubaa9\ub85d-\ud559\uc2b5\uae30\uac04\uc778\uacfc\uc815
DataSet studyCourses = course.query(
	"SELECT a.*, (SELECT COUNT(*) FROM " + courseUser.table + " WHERE course_id = a.id AND status IN (1,3)) user_cnt FROM " + course.table + " a "
	+ " WHERE status = 1 AND display_yn = 'Y' AND site_id = " + siteId + " AND study_sdate <= " + today + " AND study_edate >= " + today + " "
	+ " ORDER BY study_sdate DESC, reg_date DESC "
	+ " LIMIT 0, 10 "
);
while(studyCourses.next()) {
	studyCourses.put("cate_name", lmCategory.getTreeNames(studyCourses.i("category_id")));
	studyCourses.put("onoff_type_conv", m.getItem(studyCourses.s("onoff_type"), course.onoffPackageTypes));
	studyCourses.put("study_sdate_conv", m.time("yyyy.MM.dd", studyCourses.s("study_sdate")));
	studyCourses.put("study_edate_conv", m.time("yyyy.MM.dd", studyCourses.s("study_edate")));
	studyCourses.put("user_cnt_conv", m.nf(studyCourses.i("user_cnt")));
}

//\ubcc0\uc218-\uc2b9\uc778\ub300\uae30
int confirmCnt = courseUser.getOneInt(
	" SELECT COUNT(*) "
	+ " FROM " + courseUser.table + " a "
	+ " INNER JOIN " + user.table + " u ON a.user_id = u.id AND u.status != -1 "
	+ " INNER JOIN " + course.table + " c ON a.course_id = c.id "
	+ " WHERE a.site_id = " + siteId + " AND a.status = 0 "
	+ (courseManagerBlock ? " AND a.course_id IN (" + manageCourses + ")" : "")
	+ (deptManagerBlock ? " AND u.dept_id IN (" + userDept.getSubIdx(siteId, userDeptId) + ")" : "")
);
//\ubcc0\uc218-\uc785\uae08\ub300\uae30
int depositCnt = order.findCount("site_id = " + siteId + " AND status = 2 AND paymethod = '90'");
//\ubcc0\uc218-\ud658\ubd88\uc694\uccad
int refundCnt = refund.findCount("site_id = " + siteId + " AND status = 1");
/*
int depositCnt = courseUser.getOneInt(
	" SELECT COUNT(*) "
	+ " FROM " + courseUser.table + " a "
	+ " INNER JOIN " + user.table + " u ON a.user_id = u.id "
	+ " INNER JOIN " + course.table + " c ON a.course_id = c.id "
	+ " LEFT JOIN " + order.table + " o ON a.order_id = o.id "
	+ " WHERE a.site_id = " + siteId + " AND a.status = 2 AND o.paymethod = '90' "
);
*/
//\ubcc0\uc218-\ubc30\uc1a1\ub300\uae30
int deliveryCnt = order.getOneInt(
	" SELECT COUNT(*) "
	+ " FROM " + order.table + " a "
	+ " WHERE a.site_id = " + siteId + " AND a.status = 1 AND a.delivery_status IN (0, 2) "
	+ " AND EXISTS (SELECT 1 FROM " + orderItem.table + " WHERE order_id = a.id AND product_type = 'book') "
);
//\ubcc0\uc218-\ud0c8\ud1f4\uc2b9\uc778
int userOutCnt = userOut.findCount("site_id = " + siteId + " AND (out_date IS NULL OR out_date = '')");

//\ud3ec\ub9f7\ud305-\uc0ac\uc774\ud2b8\uc815\ubcf4
DataSet master = new DataSet();
if(isUserMaster) {
	//\ud3fc\uc785\ub825
	master.addRow();
	master.put("site_status_conv", m.getItem(siteinfo.s("status"), Site.statusList));
	master.put("is_prepare", "Y".equals(SiteConfig.s("prepare_yn")));
	
	f.addElement("open_yn", !"Y".equals(SiteConfig.s("prepare_yn")) ? "Y" : "", "hname:'\uc0ac\uc774\ud2b8 \uc900\ube44\uc911 \uc5ec\ubd80', required:'Y'");
	f.addElement("master-slogin", siteId, "hname:'\uace0\uac1d\uc0ac \uc774\ub3d9'");

	//\uac1d\uccb4
	SiteDao site = new SiteDao();
	UserSiteDao userSite = new UserSiteDao();

	//\ubaa9\ub85d-\uace0\uac1d\uc0ac
	DataSet sites = userSite.query(
		" SELECT s.id, s.site_nm, s.company_nm, s.domain, s.sysop_status, s.status "
		+ " FROM " + userSite.table + " a "
		+ " INNER JOIN " + site.table + " s ON a.site_id = s.id AND s.sysop_status = 1 AND s.status != -1 "
		+ " WHERE a.user_id = " + userId
	);
	while(sites.next()) {
		sites.put("name_equal_block", sites.s("site_nm").equals(sites.s("company_nm")));
	}

	//\ucd9c\ub825
	p.setLoop("sites", sites);
}

//\ucd9c\ub825
p.setLayout(ch);
p.setBody("main.index");
p.setVar("p_title", "\uc6b4\uc601\ud604\ud669");
p.setVar("query", m.qs());
p.setVar("form_script", f.getScript());

p.setVar("notice_block", 0 < ninfo.size());
p.setVar("notice", ninfo);

p.setVar("today", m.time("yyyy-MM-dd"));
p.setVar("sdate", sdate);
p.setVar("edate", edate);

p.setVar("cnt_done", m.nf(cntDone));
p.setVar("sum_done", m.nf(sumDone));
p.setVar("cnt_wait", m.nf(cntWait));
p.setVar("sum_wait", m.nf(sumWait));
p.setVar("cnt_cancel", m.nf(cntCancel));
p.setVar("sum_cancel", m.nf(sumCancel));
p.setVar("stat_refund", statRefund);

p.setVar("total_course_cnt", m.nf(totalCourseCnt));
p.setVar("open_course_cnt", m.nf(openACourseCnt + openRCourseCnt));
p.setVar("open_a_course_cnt", m.nf(openACourseCnt));
p.setVar("open_r_course_cnt", m.nf(openRCourseCnt));
p.setVar("stop_course_cnt", m.nf(stopCourseCnt));
p.setVar("wait_course_cnt", m.nf(waitCourseCnt));
p.setVar("finish_course_cnt", m.nf(finishCourseCnt));
p.setLoop("notices", notices);
p.setLoop("qnas", qnas);
p.setLoop("request_courses", requestCourses);
p.setLoop("study_courses", studyCourses);
p.setVar("qnas_size", qnas.size());
p.setVar("request_courses_size", requestCourses.size());
p.setVar("study_courses_size", studyCourses.size());

p.setVar("confirm_cnt_conv", m.nf(confirmCnt));
p.setVar("deposit_cnt_conv", m.nf(depositCnt));
p.setVar("refund_cnt_conv", m.nf(refundCnt));
p.setVar("delivery_cnt_conv", m.nf(deliveryCnt));
p.setVar("user_out_cnt_conv", m.nf(userOutCnt));

p.setVar("master_info", master);

p.display();


    } catch (java.lang.Throwable _jsp_e) {
      pageContext.handlePageException(_jsp_e);
    } finally {
      _jsp_application.getJspApplicationContext().freePageContext(pageContext);
    }
  }

  private java.util.ArrayList _caucho_depends = new java.util.ArrayList();

  public java.util.ArrayList _caucho_getDependList()
  {
    return _caucho_depends;
  }

  public void _caucho_addDepend(com.caucho.vfs.PersistentDependency depend)
  {
    super._caucho_addDepend(depend);
    com.caucho.jsp.JavaPage.addDepend(_caucho_depends, depend);
  }

  public boolean _caucho_isModified()
  {
    if (_caucho_isDead)
      return true;
    if (com.caucho.server.util.CauchoSystem.getVersionId() != 6749855747778707107L)
      return true;
    for (int i = _caucho_depends.size() - 1; i >= 0; i--) {
      com.caucho.vfs.Dependency depend;
      depend = (com.caucho.vfs.Dependency) _caucho_depends.get(i);
      if (depend.isModified())
        return true;
    }
    return false;
  }

  public long _caucho_lastModified()
  {
    return 0;
  }

  public java.util.HashMap<String,java.lang.reflect.Method> _caucho_getFunctionMap()
  {
    return _jsp_functionMap;
  }

  public void init(ServletConfig config)
    throws ServletException
  {
    com.caucho.server.webapp.WebApp webApp
      = (com.caucho.server.webapp.WebApp) config.getServletContext();
    super.init(config);
    com.caucho.jsp.TaglibManager manager = webApp.getJspApplicationContext().getTaglibManager();
    com.caucho.jsp.PageContextImpl pageContext = new com.caucho.jsp.PageContextImpl(webApp, this);
  }

  public void destroy()
  {
      _caucho_isDead = true;
      super.destroy();
  }

  public void init(com.caucho.vfs.Path appDir)
    throws javax.servlet.ServletException
  {
    com.caucho.vfs.Path resinHome = com.caucho.server.util.CauchoSystem.getResinHome();
    com.caucho.vfs.MergePath mergePath = new com.caucho.vfs.MergePath();
    mergePath.addMergePath(appDir);
    mergePath.addMergePath(resinHome);
    com.caucho.loader.DynamicClassLoader loader;
    loader = (com.caucho.loader.DynamicClassLoader) getClass().getClassLoader();
    String resourcePath = loader.getResourcePathSpecificFirst();
    mergePath.addClassPath(resourcePath);
    com.caucho.vfs.Depend depend;
    depend = new com.caucho.vfs.Depend(appDir.lookup("sysop/main/index.jsp"), -4146197490414473189L, false);
    com.caucho.jsp.JavaPage.addDepend(_caucho_depends, depend);
    depend = new com.caucho.vfs.Depend(appDir.lookup("sysop/main/init.jsp"), 724132902267435099L, false);
    com.caucho.jsp.JavaPage.addDepend(_caucho_depends, depend);
    depend = new com.caucho.vfs.Depend(appDir.lookup("sysop/init.jsp"), 1160630992102546501L, false);
    com.caucho.jsp.JavaPage.addDepend(_caucho_depends, depend);
  }
}
