/*
 * JSP generated by Resin-3.1.15 (built Mon, 13 Oct 2014 06:45:33 PDT)
 */

package _jsp._sysop._course;
import javax.servlet.*;
import javax.servlet.jsp.*;
import javax.servlet.http.*;
import java.util.*;
import java.io.*;
import dao.*;
import malgnsoft.db.*;
import malgnsoft.util.*;

public class _course_0lesson__jsp extends com.caucho.jsp.JavaPage
{
  private static final java.util.HashMap<String,java.lang.reflect.Method> _jsp_functionMap = new java.util.HashMap<String,java.lang.reflect.Method>();
  private boolean _caucho_isDead;
  
  public void
  _jspService(javax.servlet.http.HttpServletRequest request,
              javax.servlet.http.HttpServletResponse response)
    throws java.io.IOException, javax.servlet.ServletException
  {
    javax.servlet.http.HttpSession session = request.getSession(true);
    com.caucho.server.webapp.WebApp _jsp_application = _caucho_getApplication();
    javax.servlet.ServletContext application = _jsp_application;
    com.caucho.jsp.PageContextImpl pageContext = _jsp_application.getJspApplicationContext().allocatePageContext(this, _jsp_application, request, response, null, session, 8192, true, false);
    javax.servlet.jsp.PageContext _jsp_parentContext = pageContext;
    javax.servlet.jsp.JspWriter out = pageContext.getOut();
    final javax.el.ELContext _jsp_env = pageContext.getELContext();
    javax.servlet.ServletConfig config = getServletConfig();
    javax.servlet.Servlet page = this;
    response.setContentType("text/html; charset=utf-8");
    request.setCharacterEncoding("UTF-8");
    try {
      

String docRoot = Config.getDocRoot();
String jndi = Config.getJndi();
String tplRoot = Config.getDocRoot() + "/sysop/html";

Malgn m = new Malgn(request, response, out);

Form f = new Form("form1");
try { f.setRequest(request); } catch (Exception ex) { out.print("\uc81c\ud55c \uc6a9\ub7c9 \ucd08\uacfc - " + ex.getMessage()); return; }

Page p = new Page(tplRoot);
p.setRequest(request);
p.setPageContext(pageContext);
p.setWriter(out);
p.setBaseRoot("/home/lms/public_html/html");

SiteDao Site = new SiteDao();
DataSet siteinfo = Site.getSiteInfo(request.getServerName(), "sysop");
SiteConfigDao SiteConfig = new SiteConfigDao(siteinfo.i("id"));
if(1 != siteinfo.i("sysop_status") || "".equals(siteinfo.s("doc_root"))) { m.jsReplace("/main/guide.jsp", "top"); return; }
//Hashtable<String, String> siteconfig = SiteConfig.getSiteConfig(siteinfo.s("id"));

String siteDomain = request.getScheme() + "://" + request.getServerName();
int port = request.getServerPort();
if(port != 80) siteDomain += ":" + port;
String webUrl = siteDomain + "/sysop";

String dataDir = siteinfo.s("doc_root") + "/data";
f.dataDir = dataDir;
m.dataDir = dataDir;
m.dataUrl = Config.getDataUrl() + (!"/data".equals(Config.getDataUrl()) ? siteinfo.s("ftp_id") : "");

boolean isDevServer = -1 < request.getServerName().indexOf("lms.malgn.co.kr");
siteinfo.put("logo_url", (!"/data".equals(Config.getDataUrl()) ? "" : siteDomain) + m.getUploadUrl(siteinfo.s("logo")));

//IP\ucc28\ub2e8
String userIp = request.getRemoteAddr();
boolean isMalgnOffice = "106.244.224.183".equals(userIp) || "125.129.123.211".equals(userIp) || "59.5.222.106".equals(userIp) || "3.35.211.181".equals(userIp);
if(!"".equals(siteinfo.s("allow_ip_sysop")) && !isMalgnOffice && !Site.checkIP(userIp, siteinfo.s("allow_ip_sysop"))) {
	m.redirect("/");
	return;
}

//\uc5b8\uc5b4
String sysLocale = "".equals(siteinfo.s("locale")) ? "default" : siteinfo.s("locale");
//String sysLocale = "default";
Message _message = new Message(sysLocale);
_message.reloadAll();
m.setMessage(_message);
//p.setMessage(_message);

//\uae30\ubcf8 \ud68c\uc6d0\uc815\ubcf4
int siteId = siteinfo.i("id");
int userId = 0;
String loginId = "";
String userName = "";
String userKind = "";
int userDeptId = 0;
String userGroups = "";
String manageCourses = "";
String userSessionId = "";
String pagreeDate = "";
boolean isUserMaster = false;
String winTitle = "[\uad00\ub9ac\uc790] " + siteinfo.s("site_nm");
String sysToday = m.time("yyyyMMdd");
String sysNow = m.time("yyyyMMddHHmmss");
String surl = request.getRequestURL() + (!"".equals(m.qs()) ? "?" + m.qs() : "");
final int sysExcelCnt = 20000;

SessionDao mSession = new SessionDao(request, response);

//\ub85c\uadf8\uc778 \uc5ec\ubd80\ub97c \uccb4\ud06c
Auth auth = new Auth(request, response);
auth.loginURL = "/sysop/main/login.jsp";
auth.keyName = "MLMSKEY2014" + siteId + "7";
if(0 < siteinfo.i("sysop_session_hour")) auth.setValidTime(siteinfo.i("sysop_session_hour") * 60);
if(auth.isValid()) {
	userId = m.parseInt(auth.getString("ID"));
	loginId = auth.getString("LOGINID");
	userName = auth.getString("NAME");
	userKind = auth.getString("KIND");
	userDeptId = auth.getInt("DEPT");
	userGroups = auth.getString("GROUPS");
	manageCourses = auth.getString("MANAGE_COURSES");
	userSessionId = userSessionId = auth.getString("SESSIONID");
	pagreeDate = auth.getString("PAGREE_DATE");
	isUserMaster = "Y".equals(auth.getString("IS_USER_MASTER"));

	//2\ucc28\uc778\uc99d\uccb4\ud06c
	/*if("Y".equals(siteinfo.s("auth2_yn"))
		&&!"Y".equals(auth.getString("AUTH2_YN"))
		&& !"".equals(siteinfo.s("auth2_type"))
		&& !"malgn".equals(loginId)
		&& request.getRequestURI().indexOf("/main/auth2.jsp") == -1
		&& request.getRequestURI().indexOf("/main/otpkey_register.jsp") == -1
		&& request.getRequestURI().indexOf("/sysop/main/logout.jsp") == -1
	) {
		m.jsReplace("/sysop/main/auth2.jsp?returl=" + m.rs("returl", "/sysop/index.jsp"), "top");
		return;
	}*/

	mSession.put("id", userSessionId);
	mSession.save();

} else {
	if(request.getRequestURI().indexOf("/main/login.jsp") == -1
		&& request.getRequestURI().indexOf("/vod/upload.jsp") == -1
		&& request.getRequestURI().indexOf("/main/slogin.jsp") == -1
		&& request.getRequestURI().indexOf("/site/site_template.jsp") == -1
		&& request.getRequestURI().indexOf("/site/site_maildir.jsp") == -1
		&& (request.getRequestURI().indexOf("/user/sleep_insert.jsp") == -1 || !"log".equals(m.rs("after")))
	) {
		m.jsReplace(auth.loginURL, "top");
		return;
	}
}

MenuDao Menu = new MenuDao(p, siteId, "default");
SiteMenuDao SiteMenu = new SiteMenuDao();

boolean superBlock = "S".equals(userKind);
boolean adminBlock = "S".equals(userKind) || "A".equals(userKind);
boolean courseManagerBlock = "C".equals(userKind);
boolean deptManagerBlock = "D".equals(userKind);

//boolean isAuthCrm = superBlock || (-1 < siteinfo.s("auth_crm").indexOf("|" + userKind + "|"));
boolean isAuthCrm = superBlock || Menu.accessible(-999, userId, userKind, false);

//\ub85c\uadf8\uc544\uc6c3-\uacfc\uc815\uc6b4\uc601\uc790
if(courseManagerBlock && "".equals(manageCourses) && request.getRequestURI().indexOf("/main/logout.jsp") == -1) {
	m.jsAlert("\ub2f4\ub2f9\ud55c \uacfc\uc815\uc774 \uc5c6\uc2b5\ub2c8\ub2e4.\\n \uad00\ub9ac\uc790\uc5d0\uac8c \ubb38\uc758\ud558\uc138\uc694.");
	m.jsReplace("/sysop/main/logout.jsp", "top");
	return;
}

//\ub9e4\ub274\uc5bc
ManualDao Manual = new ManualDao();
int ManualId = Menu.getOneInt("SELECT manual_id FROM " + Menu.table + " WHERE link = '" + m.replace(request.getRequestURI(), "/sysop", "..") + "'");
if(0 < ManualId) {
	int ManualStatus = Manual.getOneInt("SELECT status FROM " + Manual.table + " WHERE id = " + ManualId);
	if(0 < ManualStatus) p.setVar("SYS_MENU_MANUAL_ID", ManualId);
}

p.setVar("WEB_URL", webUrl);
p.setVar("FRONT_URL", siteDomain);
p.setVar("SYS_TITLE", winTitle);
p.setVar("SYS_USERKIND", userKind);
p.setVar("SITE_INFO", siteinfo);
//p.setVar("SITE_CONFIG", siteconfig);
p.setVar("IS_AUTH_CRM", isAuthCrm);
p.setVar("IS_DEV_SERVER", isDevServer);
p.setVar("SYS_LOCALE", sysLocale);
p.setVar("SYS_TODAY", sysToday);
p.setVar("SYS_NOW", sysNow);
p.setVar("SYS_COMMON_CDN", !isDevServer ? "//cdn.malgnlms.com" : "");

p.setVar("user_master_block", isUserMaster || isMalgnOffice);
p.setVar("super_malgn_block", isMalgnOffice && siteinfo.i("super_id") == userId);
p.setVar("malgn_office_block", isMalgnOffice);
p.setVar("super_block", superBlock);
p.setVar("admin_block", adminBlock);
p.setVar("course_manager_block", courseManagerBlock);
p.setVar("dept_manager_block", deptManagerBlock);
p.setVar("SYS_URL", surl);

boolean isBlindUser = !sysToday.equals(pagreeDate);
p.setVar("SYS_BLINDUSER", isBlindUser);

UserSessionDao UserSession = new UserSessionDao();
UserSession.setSiteId(siteId);
UserSession.setType("sysop");
if(userId != 0 && !"SYSLOGIN".equals(userSessionId) && "N".equals(siteinfo.s("dup_sysop_yn")) && ("".equals(userSessionId) || userSessionId == null || !UserSession.isValid(userSessionId, userId))) {
	if(request.getRequestURI().indexOf("/sysop/main/logout.jsp") == -1) {
		m.jsAlert("\uc138\uc158\uc774 \ub9cc\ub8cc\ub418\uc5c8\uac70\ub098 \uc911\ubcf5 \ub85c\uadf8\uc778\uc774 \ub418\uc5b4 \uc790\ub3d9\uc73c\ub85c \ub85c\uadf8\uc544\uc6c3 \ub429\ub2c8\ub2e4.");
		m.jsReplace("/sysop/main/logout.jsp?mode=session", "top");
		return;
	}
}

InfoLogDao _log = new InfoLogDao(siteId); _log.setItems(userId, "B", surl, userIp);
InfoUserDao _logUser = new InfoUserDao(siteId);


      

String ch = "sysop";

p.setVar("auth_course_block", Menu.accessible(33, userId, userKind, false));
p.setVar("auth_management_block", Menu.accessible(75, userId, userKind, false));
p.setVar("auth_complete_block", Menu.accessible(76, userId, userKind, false));
p.setVar("auth_auto_block", Menu.accessible(42, userId, userKind, false));


      

//\uc811\uadfc\uad8c\ud55c
if(!Menu.accessible(33, userId, userKind)) { m.jsError("\uc811\uadfc \uad8c\ud55c\uc774 \uc5c6\uc2b5\ub2c8\ub2e4."); return; }

//\uae30\ubcf8\ud0a4
int cid = m.ri("cid");
if(cid == 0) { m.jsError("\uae30\ubcf8\ud0a4\ub294 \ubc18\ub4dc\uc2dc \uc9c0\uc815\ud574\uc57c \ud569\ub2c8\ub2e4."); return; }

//\uac1d\uccb4
CourseDao course = new CourseDao();
LmCategoryDao category = new LmCategoryDao("course");
CourseLessonDao courseLesson = new CourseLessonDao();
CourseSectionDao courseSection = new CourseSectionDao();
CourseProgressDao courseProgress = new CourseProgressDao();
CourseUserDao courseUser = new CourseUserDao();
LessonDao lesson = new LessonDao();
KtRemoteDao ktRemote = new KtRemoteDao(siteId, isDevServer);
LanEduDao lanEdu = new LanEduDao(siteId, isDevServer);
CourseTutorDao courseTutor = new CourseTutorDao();
TutorDao tutor = new TutorDao();
UserDao user = new UserDao();
MCal mcal = new MCal();

//\uce74\ud14c\uace0\ub9ac
DataSet categories = category.getList(siteId);

//\uc815\ubcf4-\uc0ac\uc774\ud2b8\uc124\uc815
DataSet siteconfig = SiteConfig.getArr(new String[] {"kt_remote", "lanedu_type"});

//\uc815\ubcf4-\uacfc\uc815
DataSet cinfo = course.find(
	"id = " + cid + " AND status != -1 AND site_id = " + siteId + ""
	+ ("C".equals(userKind) ? " AND id IN (" + manageCourses + ") " : "")
);
if(!cinfo.next()) { m.jsError("\ud574\ub2f9 \uc815\ubcf4\uac00 \uc5c6\uc2b5\ub2c8\ub2e4."); return; }
cinfo.put("cate_name", category.getTreeNames(cinfo.i("category_id")));
cinfo.put("status_conv", m.getItem(cinfo.s("status"), course.statusList));
if("R".equals(cinfo.s("course_type"))) {
	cinfo.put("request_date", m.time("yyyy.MM.dd", cinfo.s("request_sdate")) + " - " + m.time("yyyy.MM.dd", cinfo.s("request_edate")));
	cinfo.put("study_date", m.time("yyyy.MM.dd", cinfo.s("study_sdate")) + " - " + m.time("yyyy.MM.dd", cinfo.s("study_edate")));
	cinfo.put("course_type_conv", "\uc815\uaddc");
	cinfo.put("study_sdate_conv", m.time("yyyy-MM-dd", cinfo.s("study_sdate")));
	cinfo.put("study_edate_conv", m.time("yyyy-MM-dd", cinfo.s("study_edate")));
	cinfo.put("alltime_block", false);
} else if("A".equals(cinfo.s("course_type"))) {
	cinfo.put("request_date", "\uc0c1\uc2dc");
	cinfo.put("study_date", "\uc0c1\uc2dc");
	cinfo.put("course_type_conv", "\uc0c1\uc2dc");
	cinfo.put("alltime_block", true);
}
cinfo.put("period_conv", cinfo.b("period_yn") ? "\ud559\uc2b5\uae30\uac04 \uc124\uc815" : "-");
cinfo.put("lesson_order_conv", cinfo.b("lesson_order_yn") ? "\uc21c\ucc28\ud559\uc2b5" : "-");
cinfo.put("course_type_conv", m.getItem(cinfo.s("course_type"), course.types));
cinfo.put("onoff_type_conv", m.getItem(cinfo.s("onoff_type"), course.onoffTypes));
cinfo.put("online_block", "N".equals(cinfo.s("onoff_type")));
cinfo.put("display_conv", cinfo.b("display_yn") ? "\uc815\uc0c1" : "\uc228\uae40");


DataSet rs = courseUser.find("course_id = " + cid + " AND status = 1", "id");
StringBuffer sb = new StringBuffer();
while(rs.next()) { sb.append(","); sb.append(rs.s("id")); }
String userIdx = rs.size() == 0 ? "" : " AND course_user_id IN (" + sb.toString().substring(1) + ")";

int progressCnt = !"".equals(userIdx) ? courseProgress.findCount("course_id = " + cid + " AND status != -1" + userIdx) : 0;
boolean isModify = 0 == progressCnt; //\uc218\uc815\uac00\ub2a5\uc5ec\ubd80
cinfo.put("delete_block", isModify);
cinfo.put("progress_cnt_conv", m.nf(progressCnt));

//\uc885\ub8cc\uc5ec\ubd80
boolean closed = cinfo.b("close_yn");

//\uc0ad\uc81c
if("del".equals(m.rs("mode"))) {
	if("".equals(f.get("idx")) && "".equals(f.get("sidx"))) { m.jsError("\uae30\ubcf8\ud0a4\ub294 \ubc18\ub4dc\uc2dc \uc9c0\uc815\ud574\uc57c \ud569\ub2c8\ub2e4."); return; }

	//\uc81c\ud55c
	if(closed) { m.jsAlert("\ud574\ub2f9 \uacfc\uc815\uc740 \uc885\ub8cc\ub418\uc5b4 \uac15\uc758\ub97c \uc0ad\uc81c\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4."); return; }

	//\uac15\uc758\uc0ad\uc81c
	if(!"".equals(f.get("idx"))) {

		DataSet clist = courseLesson.query(
			 "SELECT a.course_id, a.lesson_id, a.twoway_url, a.host_num, a.tutor_id, l.lesson_type"
			+ " FROM " + courseLesson.table + " a "
			+ " INNER JOIN " + lesson.table + " l ON a.lesson_id = l.id AND l.site_id = " + siteId
			+ " WHERE a.course_id = " + cid + " AND a.lesson_id IN (" + f.get("idx") + ")"
			+ " AND a.site_id = " + siteId
		);

		while(clist.next()) {
			//\ub79c\uc120\uc5d0\ub4c0 \uac15\uc758\uc77c\uc2dc \ud50c\ub79c \uc0ad\uc81c API \ud638\ucd9c
			if("15".equals(clist.s("lesson_type")) && !"".equals(clist.s("twoway_url")) && 0 != clist.i("tutor_id")) {

				if("B".equals(siteconfig.s("lanedu_type"))) {
					Json j = lanEdu.deletePlan(clist.s("twoway_url"), clist.i("host_num"));
					if(200 != j.getInt("//code")) { m.log("lanedu", j.getString("//message")); }
				} else if("L".equals(siteconfig.s("lanedu_type"))) {
					ktRemote.deletePlan(clist.s("twoway_url"), ktRemote.getPlanUserId(clist.i("tutor_id"), "HOST"));
				}
			}

			if(!courseLesson.delete("course_id = " + clist.i("course_id") + " AND lesson_id = " + clist.i("lesson_id") + " AND site_id = " + siteId)) {
				m.jsError("\uac15\uc758\ub97c \uc0ad\uc81c\ud558\ub294 \uc911 \uc624\ub958\uac00 \ubc1c\uc0dd\ud588\uc2b5\ub2c8\ub2e4.");
				return;
			}
		}

		//\uc9c4\ub3c4\uc0ad\uc81c
		if(!"".equals(userIdx)) {
			courseProgress.item("status", -1);
			if(!courseProgress.update("course_id = " + cid + " AND lesson_id IN (" + f.get("idx") + ") AND status != -1" + userIdx)) {
				m.jsError("\uc0ad\uc81c\ud558\ub294 \uc911 \uc624\ub958\uac00 \ubc1c\uc0dd\ud588\uc2b5\ub2c8\ub2e4.");
				return;
			}
		}
	}

	//\uc139\uc158\uc0ad\uc81c
	courseSection.item("status", -1);
	if(!"".equals(f.get("sidx")) && !courseSection.update("id IN (" + f.get("sidx") + ")")) {
		m.jsError("\uc139\uc158\uc744 \uc0ad\uc81c\ud558\ub294 \uc911 \uc624\ub958\uac00 \ubc1c\uc0dd\ud588\uc2b5\ub2c8\ub2e4.");
		return;
	};

	courseLesson.autoSort(cid);

	//\uc774\ub3d9
	m.jsReplace("course_lesson.jsp?" + m.qs("mode, idx, sidx"));
	return;
}

//\ud3fc\uccb4\ud06c
f.addElement("lesson_display_ord", cinfo.s("lesson_display_ord"), "hname:'\uac15\uc758\uc2e4 \uc815\ub82c\uae30\uc900', required:'Y'");

//\uc218\uc815
if(m.isPost() && f.validate()) {
	if(f.getArr("lesson_id") != null) {
		int sort = 0;
		int sectionId = 0;
		int lessonIdx = 0;

		for(int i = 0; i < f.getArr("lesson_id").length; i++) {
			if("section".equals(f.getArr("lesson_id")[i])) {
				sectionId = m.parseInt(f.getArr("section_id")[i]);
				//courseSection.item("section_nm", f.getArr("section_nm")[i]);
				//if(!courseSection.update("id = " + sectionId)) { }
			} else {

				if(cinfo.b("period_yn")) {
					if("".equals(f.getArr("start_time_hour")[i])
							&& (!"".equals(f.getArr("start_time_min")[i]) || !"".equals(f.getArr("end_time_hour")[i]) || !"".equals(f.getArr("end_time_min")[i]))
						|| !"".equals(f.getArr("start_time_hour")[i])
							&& ("".equals(f.getArr("start_time_min")[i]) || "".equals(f.getArr("end_time_hour")[i]) || "".equals(f.getArr("end_time_min")[i]))) {
						m.jsAlert("\ud559\uc2b5\uae30\uac04 \uc2dc\uc791/\uc885\ub8cc\uc2dc\uac04\uc758 \uc124\uc815\uc740 \uc5c6\uc74c \ub610\ub294 \uc2dc\ubd84 \uac12\uc73c\ub85c \uc77c\uce58\ud558\uc5ec\uc57c \ud569\ub2c8\ub2e4.");
						return;
					}
				}

				courseLesson.item("section_id", sectionId);
				courseLesson.item("chapter", ++sort);
				courseLesson.item("lesson_hour", m.parseDouble(f.getArr("lesson_hour")[i]));
				courseLesson.item("start_day", f.getArr("start_day")[i]);
				courseLesson.item("period", f.getArr("period")[i]);

				courseLesson.item("tutor_id", !"".equals(f.getArr("tutor_id")[i]) ? f.getArr("tutor_id")[i] : 0);
				courseLesson.item("start_date", m.time("yyyyMMdd", f.getArr("start_date")[i]));
				courseLesson.item("end_date", m.time("yyyyMMdd", f.getArr("end_date")[i]));
				courseLesson.item("start_time", "");
				if(!"".equals(f.getArr("start_time_hour")[i]) && !"".equals(f.getArr("start_time_min")[i])) courseLesson.item("start_time", f.getArr("start_time_hour")[i] + f.getArr("start_time_min")[i] + "00");
				courseLesson.item("end_time", "");
				if(!"".equals(f.getArr("end_time_hour")[i]) && !"".equals(f.getArr("end_time_min")[i])) courseLesson.item("end_time", f.getArr("end_time_hour")[i] + f.getArr("end_time_min")[i] + "59");

				if(!courseLesson.update("course_id = " + cid + " AND lesson_id = " + f.getArr("lesson_id")[i])) { }
			}
		}
	}

	//\uacfc\uc815\uc124\uc815
	course.item("lesson_display_ord", f.get("lesson_display_ord", "A"));
	if(!course.update("id = " + cid + " AND site_id = " + siteId)) { }

	m.jsAlert("\uc218\uc815\ub418\uc5c8\uc2b5\ub2c8\ub2e4.");
	m.jsReplace("course_lesson.jsp?" + m.qs(), "parent");
	return;
}

//\ubaa9\ub85d
ListManager lm = new ListManager();
//lm.d(out);
lm.setRequest(request);
lm.setListNum(1000);
lm.setTable(
	courseLesson.table + " a "
	+ " INNER JOIN " + lesson.table + " b ON a.lesson_id = b.id "
	+ " LEFT JOIN " + courseSection.table + " cs ON a.section_id = cs.id AND a.course_id = cs.course_id AND cs.status = 1 "
);
lm.setFields(
	"a.*"
	+ ", b.content_id, b.onoff_type, b.lesson_nm, b.lesson_type, b.total_time, b.complete_time, b.content_width, b.content_height, b.start_url, b.mobile_a, b.mobile_i "
	+ ", cs.id section_id, cs.course_id section_course_id, cs.section_nm "
);
lm.addWhere("a.status != -1");
lm.addWhere("a.course_id = " + cid + "");
lm.setOrderBy("a.chapter ASC");

//\ud3ec\ub9f7\ud305
int idx = 0;
int lastSectionId = 0;
DataSet sortList = new DataSet();
DataSet list = lm.getDataSet();
Integer[] sidx = new Integer[list.size()];
while(list.next()) {
	list.put("lesson_nm_conv", m.cutString(list.s("lesson_nm"), 55));
	//list.put("lesson_type_conv", m.getItem(list.s("lesson_type"), "W".equals(siteinfo.s("ovp_vendor")) ? lesson.types : lesson.catenoidTypes));
	list.put("lesson_type_conv", m.getItem(list.s("lesson_type"), lesson.allTypes));
	list.put("pc_block", !"".equals(list.s("start_url")));
	list.put("ios_block", !"".equals(list.s("mobile_i")));
	list.put("android_block", !"".equals(list.s("mobile_a")));

	list.put("start_date_conv", m.time("yyyy-MM-dd", list.s("start_date")));
	list.put("end_date_conv", m.time("yyyy-MM-dd", list.s("end_date")));
	list.put("curr_chapter", list.i("chapter") * 1000);

	list.put("online_block", "N".equals(list.s("onoff_type")) || "T".equals(list.s("onoff_type")));
	list.put("onoff_type_conv", m.getItem(list.s("onoff_type"), lesson.onoffTypes));

	list.put("lesson_hour", list.s("lesson_hour").replace(".00", ""));

	list.put("start_time_hour", list.s("start_time").length() == 6 ? list.s("start_time").substring(0,2) : "");
	list.put("start_time_min", list.s("start_time").length() == 6 ? list.s("start_time").substring(2,4) : "");
	list.put("end_time_hour", list.s("end_time").length() == 6 ?  list.s("end_time").substring(0,2) : "");
	list.put("end_time_min", list.s("end_time").length() == 6 ? list.s("end_time").substring(2,4) : "");

	list.put("twoway_block", "15".equals(list.s("lesson_type")));
	list.put("empty_block", list.b("twoway_block") && (list.i("tutor_id") == 0 || list.s("start_date").length() != 8 || list.s("end_date").length() != 8 || list.s("start_time").length() != 6 || list.s("end_time").length() != 6));

	sortList.addRow();
	sortList.put("id", list.i("__asc"));
	sortList.put("name", list.i("__asc"));

	sidx[idx++] = list.i("section_id");

	if(lastSectionId != list.i("section_id") && 0 < list.i("section_id")) {
		lastSectionId = list.i("section_id");
		list.put("section_block", true);
	} else {
		list.put("section_block", false);
	}
}

if(1 > sidx.length || null == sidx) sidx = new Integer[] { 0 };

//\ubaa9\ub85d-\uac15\uc0ac
DataSet tutors = courseTutor.query(
	"SELECT a.*, t.*, u.login_id "
	+ " FROM " + courseTutor.table + " a "
	+ " INNER JOIN " + tutor.table + " t ON t.user_id = a.user_id "
	+ " INNER JOIN " + user.table + " u ON t.user_id = u.id "
	+ " WHERE a.course_id = " + cid + ""
);

//\ucd9c\ub825
p.setBody("course.course_lesson");
p.setVar("query", m.qs());
p.setVar("list_query", m.qs("cid,id"));
p.setVar("form_script", f.getScript());

p.setLoop("list", list);
p.setVar("list_total", lm.getTotalString());
p.setVar("course", cinfo);

p.setLoop("section_list", courseSection.find("id NOT IN (" + m.join(",", sidx) + ") AND course_id = " + cid + " AND status = 1"));
p.setLoop("sort_list", sortList);
p.setLoop("hours", mcal.getHours());
p.setLoop("minutes", mcal.getMinutes(5));
p.setLoop("tutors", tutors);

p.setVar("section_colspan", 3 + (cinfo.b("online_block") ? (cinfo.b("period_yn") ? 2 : 1) : 0) + ("B".equals(cinfo.s("onoff_type")) ? 1 : 0));
p.setVar("twoway_block", "L".equals(siteconfig.s("lanedu_type")) || "B".equals(siteconfig.s("lanedu_type")));
p.setVar("biz_block", "B".equals(siteconfig.s("lanedu_type")));
p.setVar("tab_lesson", "current");
p.display();


    } catch (java.lang.Throwable _jsp_e) {
      pageContext.handlePageException(_jsp_e);
    } finally {
      _jsp_application.getJspApplicationContext().freePageContext(pageContext);
    }
  }

  private java.util.ArrayList _caucho_depends = new java.util.ArrayList();

  public java.util.ArrayList _caucho_getDependList()
  {
    return _caucho_depends;
  }

  public void _caucho_addDepend(com.caucho.vfs.PersistentDependency depend)
  {
    super._caucho_addDepend(depend);
    com.caucho.jsp.JavaPage.addDepend(_caucho_depends, depend);
  }

  public boolean _caucho_isModified()
  {
    if (_caucho_isDead)
      return true;
    if (com.caucho.server.util.CauchoSystem.getVersionId() != 6749855747778707107L)
      return true;
    for (int i = _caucho_depends.size() - 1; i >= 0; i--) {
      com.caucho.vfs.Dependency depend;
      depend = (com.caucho.vfs.Dependency) _caucho_depends.get(i);
      if (depend.isModified())
        return true;
    }
    return false;
  }

  public long _caucho_lastModified()
  {
    return 0;
  }

  public java.util.HashMap<String,java.lang.reflect.Method> _caucho_getFunctionMap()
  {
    return _jsp_functionMap;
  }

  public void init(ServletConfig config)
    throws ServletException
  {
    com.caucho.server.webapp.WebApp webApp
      = (com.caucho.server.webapp.WebApp) config.getServletContext();
    super.init(config);
    com.caucho.jsp.TaglibManager manager = webApp.getJspApplicationContext().getTaglibManager();
    com.caucho.jsp.PageContextImpl pageContext = new com.caucho.jsp.PageContextImpl(webApp, this);
  }

  public void destroy()
  {
      _caucho_isDead = true;
      super.destroy();
  }

  public void init(com.caucho.vfs.Path appDir)
    throws javax.servlet.ServletException
  {
    com.caucho.vfs.Path resinHome = com.caucho.server.util.CauchoSystem.getResinHome();
    com.caucho.vfs.MergePath mergePath = new com.caucho.vfs.MergePath();
    mergePath.addMergePath(appDir);
    mergePath.addMergePath(resinHome);
    com.caucho.loader.DynamicClassLoader loader;
    loader = (com.caucho.loader.DynamicClassLoader) getClass().getClassLoader();
    String resourcePath = loader.getResourcePathSpecificFirst();
    mergePath.addClassPath(resourcePath);
    com.caucho.vfs.Depend depend;
    depend = new com.caucho.vfs.Depend(appDir.lookup("sysop/course/course_lesson.jsp"), -8630841325523930527L, false);
    com.caucho.jsp.JavaPage.addDepend(_caucho_depends, depend);
    depend = new com.caucho.vfs.Depend(appDir.lookup("sysop/course/init.jsp"), 4867222188672443604L, false);
    com.caucho.jsp.JavaPage.addDepend(_caucho_depends, depend);
    depend = new com.caucho.vfs.Depend(appDir.lookup("sysop/init.jsp"), 7857552796152506446L, false);
    com.caucho.jsp.JavaPage.addDepend(_caucho_depends, depend);
  }
}
